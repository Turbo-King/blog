[{"categories":["Markdown"],"content":"基本 Markdown 语法. 注意 这篇文章借鉴了一篇很棒的来自 Grav 的文章. 我们都知道编写 Web 内容很麻烦.但市面上有一种 WYSIWYG所见即所得 编辑器可以帮助我们减轻了这一任务. 但通常会导致代码太糟, 但有时更糟糕的是, 网页也会很丑，毕竟代码不是我们亲手所写，讲究的就是两字——省事，以至于其他都与我无关. 对于通常伴随的所有复杂和丑陋的问题, Markdown 生成 HTML 内容的方式是一种更好的选择. 一些主要好处是: Markdown 简单易学, 几乎没有多余的字符, 因此编写内容也更快. 用 Markdown 书写时出错的机会更少. 可以产生有效的 XHTML 输出. 将内容和视觉显示保持分开, 这样就不会打乱网站的外观. 可以在你喜欢的任何文本编辑器或 Markdown 应用程序中编写内容. Markdown 使用起来很有趣! John Gruber, Markdown 的作者说: Markdown 格式的首要设计目标是更具可读性. 最初的想法是 Markdown 格式的文档应当以纯文本形式发布, 而不会看起来像被标签或格式说明所标记. 虽然 Markdown 的语法受到几种现有的文本到 HTML 转换工具的影响, 但 Markdown 语法的最大灵感来源是纯文本电子邮件的格式. – John Gruber 话不多说, 我们来回顾一下 Markdown 的主要语法以及生成的 HTML 样式! 技巧  将此页保存为书签，以备将来参考! ","date":"2022-09-19","objectID":"/blog/20220919/:0:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"1 标题 从 h2 到 h6 的标题在每个级别上都加上一个 ＃: ## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 输出的 HTML 看起来像这样: \u003ch2\u003eh2 标题\u003c/h2\u003e \u003ch3\u003eh3 标题\u003c/h3\u003e \u003ch4\u003eh4 标题\u003c/h4\u003e \u003ch5\u003eh5 标题\u003c/h5\u003e \u003ch6\u003eh6 标题\u003c/h6\u003e 标题 ID 要添加自定义标题 ID, 请在与标题相同的行中将自定义 ID 放在花括号中: ### 一个很棒的标题 {#custom-id} 输出的 HTML 看起来像这样: \u003ch3 id=\"custom-id\"\u003e一个很棒的标题\u003c/h3\u003e ","date":"2022-09-19","objectID":"/blog/20220919/:1:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"2 注释 注释是和 HTML 兼容的： \u003c!-- 这是一段注释 --\u003e 不能看到以下的注释: ","date":"2022-09-19","objectID":"/blog/20220919/:2:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"3 水平线 HTML 中的 \u003chr\u003e 标签是用来在段落元素之间创建一个 “专题间隔” 的. 使用 Markdown, 你可以用以下方式创建一个 \u003chr\u003e 标签: ___: 三个连续的下划线 ---: 三个连续的破折号 ***: 三个连续的星号 呈现的输出效果如下: ","date":"2022-09-19","objectID":"/blog/20220919/:3:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"4 段落 按照纯文本的方式书写段落, 纯文本在呈现的 HTML 中将用 \u003cp\u003e/\u003c/p\u003e 标签包裹. 如下段落: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. 输出的 HTML 看起来像这样: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e 可以使用一个空白行进行换行. ","date":"2022-09-19","objectID":"/blog/20220919/:4:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"5 内联 HTML 元素 如果你需要某个 HTML 标签 (带有一个类), 则可以简单地像这样使用: Markdown 格式的段落. \u003cdiv class=\"class\"\u003e 这是 \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Markdown 格式的段落. ","date":"2022-09-19","objectID":"/blog/20220919/:5:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"6 强调 ","date":"2022-09-19","objectID":"/blog/20220919/:6:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"加粗 用于强调带有较粗字体的文本片段. 以下文本片段会被 渲染为粗体. **渲染为粗体** __渲染为粗体__ 输出的 HTML 看起来像这样: \u003cstrong\u003e渲染为粗体\u003c/strong\u003e ","date":"2022-09-19","objectID":"/blog/20220919/:6:1","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"斜体 用于强调带有斜体的文本片段. 以下文本片段被 渲染为斜体. *渲染为斜体* _渲染为斜体_ 输出的 HTML 看起来像这样: \u003cem\u003e渲染为斜体\u003c/em\u003e ","date":"2022-09-19","objectID":"/blog/20220919/:6:2","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"删除线 按照 GFMGitHub flavored Markdown 你可以使用删除线. ~~这段文本带有删除线.~~ 呈现的输出效果如下: 这段文本带有删除线. 输出的 HTML 看起来像这样: \u003cdel\u003e这段文本带有删除线.\u003c/del\u003e ","date":"2022-09-19","objectID":"/blog/20220919/:6:3","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"组合 加粗, 斜体, 和删除线可以 组合使用. ***加粗和斜体*** ~~**删除线和加粗**~~ ~~*删除线和斜体*~~ ~~***加粗, 斜体和删除线***~~ 呈现的输出效果如下: 加粗和斜体 删除线和加粗 删除线和斜体 加粗, 斜体和删除线 输出的 HTML 看起来像这样: \u003cem\u003e\u003cstrong\u003e加粗和斜体\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003e删除线和加粗\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e删除线和斜体\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003e加粗, 斜体和删除线\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"2022-09-19","objectID":"/blog/20220919/:6:4","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"7 引用 用于在文档中引用其他来源的内容块. 在要引用的任何文本之前添加 \u003e: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 呈现的输出效果如下: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 输出的 HTML 看起来像这样: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e 引用也可以嵌套: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. 呈现的输出效果如下: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2022-09-19","objectID":"/blog/20220919/:7:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"8 列表 ","date":"2022-09-19","objectID":"/blog/20220919/:8:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"无序列表 一系列项的列表, 其中项的顺序没有明显关系. 你可以使用以下任何符号来表示无序列表中的项: * 一项内容 - 一项内容 + 一项内容 例如: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"2022-09-19","objectID":"/blog/20220919/:8:1","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"有序列表 一系列项的列表, 其中项的顺序确实很重要. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e 技巧 如果你对每一项使用 1., Markdown 将自动为每一项编号. 例如: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"2022-09-19","objectID":"/blog/20220919/:8:2","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"任务列表 任务列表使你可以创建带有复选框的列表. 要创建任务列表, 请在任务列表项之前添加破折号 (-) 和带有空格的方括号 ([ ]). 要选择一个复选框，请在方括号之间添加 x ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media 呈现的输出效果如下: Write the press release Update the website Contact the media ","date":"2022-09-19","objectID":"/blog/20220919/:8:3","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"9 代码 ","date":"2022-09-19","objectID":"/blog/20220919/:9:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"行内代码 用 ` 包装行内代码段. 在这个例子中, `\u003csection\u003e\u003c/section\u003e` 会被包裹成 **代码**. 呈现的输出效果如下: 在这个例子中, \u003csection\u003e\u003c/section\u003e 会被包裹成 代码. 输出的 HTML 看起来像这样: \u003cp\u003e 在这个例子中, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e 会被包裹成 \u003cstrong\u003e代码\u003c/strong\u003e. \u003c/p\u003e ","date":"2022-09-19","objectID":"/blog/20220919/:9:1","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"缩进代码 将几行代码缩进至少四个空格，例如: // Some comments line 1 of code line 2 of code line 3 of code 呈现的输出效果如下: // Some comments line 1 of code line 2 of code line 3 of code 输出的 HTML 看起来像这样: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"2022-09-19","objectID":"/blog/20220919/:9:2","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"围栏代码块 使用 “围栏” ``` 来生成一段带有语言属性的代码块. ```markdown Sample text here... ``` 输出的 HTML 看起来像这样: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"2022-09-19","objectID":"/blog/20220919/:9:3","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"语法高亮 GFMGitHub Flavored Markdown 也支持语法高亮. 要激活它，只需在第一个代码 “围栏” 之后直接添加你要使用的语言的文件扩展名, ```js, 语法高亮显示将自动应用于渲染的 HTML 中. 例如, 在以下 JavaScript 代码中应用语法高亮: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` 呈现的输出效果如下: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; 注意 Hugo 文档中的 语法高亮页面 介绍了有关语法高亮的更多信息, 包括语法高亮的 shortcode. ","date":"2022-09-19","objectID":"/blog/20220919/:9:4","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"10 表格 通过在每个单元格之间添加竖线作为分隔线, 并在标题下添加一行破折号 (也由竖线分隔) 来创建表格. 注意, 竖线不需要垂直对齐. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. 输出的 HTML 看起来像这样: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e 文本右对齐或居中对齐 在任何标题下方的破折号右侧添加冒号将使该列的文本右对齐. 在任何标题下方的破折号两边添加冒号将使该列的对齐文本居中. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"2022-09-19","objectID":"/blog/20220919/:10:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"11 链接 ","date":"2022-09-19","objectID":"/blog/20220919/:11:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"基本链接 \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) 呈现的输出效果如下 (将鼠标悬停在链接上，没有提示): https://assemble.io contact@revolunet.com Assemble 输出的 HTML 看起来像这样: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"2022-09-19","objectID":"/blog/20220919/:11:1","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"添加一个标题 [Upstage](https://github.com/upstage/ \"Visit Upstage!\") 呈现的输出效果如下 (将鼠标悬停在链接上，会有一行提示): Upstage 输出的 HTML 看起来像这样: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"2022-09-19","objectID":"/blog/20220919/:11:2","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"定位标记 定位标记使你可以跳至同一页面上的指定锚点. 例如, 每个章节: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) 将跳转到这些部分: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. 注意 定位标记的位置几乎是任意的. 因为它们并不引人注目, 所以它们通常被放在同一行了. ","date":"2022-09-19","objectID":"/blog/20220919/:11:3","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"12 脚注 脚注使你可以添加注释和参考, 而不会使文档正文混乱. 当你创建脚注时, 会在添加脚注引用的位置出现带有链接的上标编号. 读者可以单击链接以跳至页面底部的脚注内容. 要创建脚注引用, 请在方括号中添加插入符号和标识符 ([^1]). 标识符可以是数字或单词, 但不能包含空格或制表符. 标识符仅将脚注引用与脚注本身相关联 - 在脚注输出中, 脚注按顺序编号. 在中括号内使用插入符号和数字以及用冒号和文本来添加脚注内容 ([^1]：这是一段脚注). 你不一定要在文档末尾添加脚注. 可以将它们放在除列表, 引用和表格等元素之外的任何位置. 这是一个数字脚注[^1]. 这是一个带标签的脚注[^label] [^1]: 这是一个数字脚注 [^label]: 这是一个带标签的脚注 这是一个数字脚注1. 这是一个带标签的脚注2 ","date":"2022-09-19","objectID":"/blog/20220919/:12:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"13 图片 图片的语法与链接相似, 但包含一个在前面的感叹号. ![Minion](https://octodex.github.com/images/minion.png) 或者: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") The Stormtroopocat 像链接一样, 图片也具有脚注样式的语法: ![Alt text][id] The Dojocat 这是一个数字脚注 ↩︎ 这是一个带标签的脚注 ↩︎ ","date":"2022-09-19","objectID":"/blog/20220919/:13:0","tags":["Markdown","HTML","Posts","grammar"],"title":"Markdown 基本语法","uri":"/blog/20220919/"},{"categories":["Markdown"],"content":"Docker安装SQLServer","date":"2022-08-31","objectID":"/blog/20220831/","tags":["study","Docker","SQLServer","Mac"],"title":"Mac使用SQLServer数据库","uri":"/blog/20220831/"},{"categories":["Markdown"],"content":"Mac 安装 SQL Server ","date":"2022-08-31","objectID":"/blog/20220831/:0:0","tags":["study","Docker","SQLServer","Mac"],"title":"Mac使用SQLServer数据库","uri":"/blog/20220831/"},{"categories":["Markdown"],"content":"前言 由于最近学习需要使用到 SQL Server 数据库，但我本人使用的操作系统是 Mac ，众所周知， SQL Server 是微软旗下的关系型数据库（具体有关SQL Server优点自行去微软官方查看👀 Microsoft - SQL Server | Microsoft Docs ），所以微软肯定更加亲近自己的亲儿子 Windows 操作系统，以至于到现在 SQL Server 并不支持 Mac，那怎么办呢？总不能安装虚拟机使用吧，对于我们如此珍惜内存使用的程序猿那是不可能的😂，经过我查阅资料，我发现微软当前支持 Ubuntu 16.04，和 RHEL 7.2（红帽子企业版 Linux ），既然支持 Linux 那就好办了，我们可以使用Docker🤔应用去虚拟化实例。 ","date":"2022-08-31","objectID":"/blog/20220831/:0:1","tags":["study","Docker","SQLServer","Mac"],"title":"Mac使用SQLServer数据库","uri":"/blog/20220831/"},{"categories":["Markdown"],"content":"Docker 介绍 Docker 是一个开源的应用容器引擎，基于 Go 语言 并遵从 Apache2.0 协议开源。 Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。 Docker 最好的一点在于你需要什么环境就可以下载仅拥有该环境的 Linux 系统，即缩小了使用的体积，也拥有了需要使用的环境，轻便又高效。 ","date":"2022-08-31","objectID":"/blog/20220831/:0:2","tags":["study","Docker","SQLServer","Mac"],"title":"Mac使用SQLServer数据库","uri":"/blog/20220831/"},{"categories":["Markdown"],"content":"Mac 安装 Docker Docker 官网手动安装 Docker HomeBrew 托管安装 brew cask install docker 对于能偷懒就偷懒的我来说😎，肯定选择后者一条命令解决了，官网安装下载还需要去寻找点击下载，对于程序猿来说多不优雅呀🤓，想要了解 macOS（或 Linux）缺失的软件包的管理器 — Homebrew 的可以自行去了解一下，真是可以大大提高效率，让你安装程序变得如此优雅。 ==\u003e Downloading https://download.docker.com/mac/stable/42716/Docker.dmg ######################################################################## 100.0% ==\u003e Verifying SHA-256 checksum for Cask 'docker'. ==\u003e Installing Cask docker ==\u003e Moving App 'Docker.app' to '/Applications/Docker.app'. docker was successfully installed! 显示 successfully 便已经成功下载 ","date":"2022-08-31","objectID":"/blog/20220831/:0:3","tags":["study","Docker","SQLServer","Mac"],"title":"Mac使用SQLServer数据库","uri":"/blog/20220831/"},{"categories":["Markdown"],"content":"Docker 配置并拉取容器镜像 基本环境配置 根据自己电脑相应配置，自己分配Docker占用资源大小，内存一定要大于2G，我记得好像SQL Server最基本要保证内存2G才能成功启动（以下是我的Docker资源分配配置）。 镜像加速 鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，我们可以需要配置加速器来解决，我使用的是网易的镜像地址：http://hub-mirror.c.163.com。 配置完成后重启 Docker 应用，打开 Terminal 输入 docker info 查看配置是否成功。 docker info .... Registry Mirrors: http://hub-mirror.c.163.com/ Live Restore Enabled: false Product License: Community Engine 拉取并运行 SQL Server 容器镜像 拉取并运行 SQL Server 容器映像，参考了Docker: Install containers for SQL Server on Linux - SQL Server | Microsoft Docs 从 Microsoft 容器注册表中拉取 SQL Server 2017 Linux 容器映像，打开我们的终端，输入命令： sudo docker pull mcr.microsoft.com/mssql/server:2017-latest 这里会将sql server for linux docker下载到我们计算机上。 使用 Docker 运行容器镜像 要使用 Docker 运行容器映像，可以从 Terminal (Linux/macOS) 使用以下命令。(也就是终端)。 sudo docker run -e \"ACCEPT_EULA=Y\" -e \"SA_PASSWORD=\u003cYourStrong@Passw0rd\u003e\" \\ -p 1433:1433 --name sqlserver \\ -d mcr.microsoft.com/mssql/server:2017-latest 备注: 密码应符合 SQL Server 默认密码策略，否则容器无法设置 SQL Server，将停止工作。 默认情况下，密码的长度必须至少为 8 个字符，并且必须包含以下四种字符中的三种：大写字母、小写字母、十进制数字和符号。 你可以通过执行 docker logs 命令检查错误日志。 参数说明: -e \"ACCEPT_EULA=Y\" 将 ACCEPT_EULA 变量设置为任意值，以确认接受最终用户许可协议。 SQL Server 映像的必须设置。 \"SA_PASSWORD=\u003cYourStrong@Passw0rd\u003e\" 指定至少包含 8 个字符且符合 SQL Server 密码要求的强密码。 SQL Server 映像的必需设置。 -p 1433:1433 将主机环境中的 TCP 端口（第一个值）映射到容器中的 TCP 端口（第二个值）。 在此示例中，SQL Server 侦听容器中的 TCP 1433，并对主机上的端口 1433 公开。 name sqlserver 为容器指定一个自定义名称，而不是使用随机生成的名称。 如果运行多个容器，则无法重复使用相同的名称。 mcr.microsoft.com/mssql/server:2017-latest SQL Server 2017 Linux 容器映像 查看 Docker 容器 要查看 Docker 容器，请在 Terminal 中使用 docker ps 命令。 sudo docker ps -a 显示结果如下： CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 78c2deca0bd6 mcr.microsoft.com/mssql/server:2017-latest \"/opt/mssql/bin/nonr…\" 30 minutes ago Exited (0) 2 minutes ago sqlserver 如果“状态”列显示“正常运行”，则 SQL Server 将在容器中运行，并侦听“端口”列中指定的端口（我现在是关闭状态，可以使用 docker start CONTAINER ID 重新启动 ） 。 更改 SA 密码 SA 帐户是安装过程中在 SQL Server 实例上创建的系统管理员。 创建 SQL Server 容器后，通过在容器中运行 echo $SA_PASSWORD，可发现指定的 SA_PASSWORD 环境变量。 出于安全考虑，请考虑更改 SA 密码。 选择 SA 用户要使用的强密码。 使用 docker exec 运行sqlcmd ，以使用 Transact-SQL 更改密码。 在下面的示例中，将旧密码 \u003cYourStrong!Passw0rd\u003e和新密码 \u003cYourNewStrong!Passw0rd\u003e 替换为你自己的密码值。 sudo docker exec -it sqlserver /opt/mssql-tools/bin/sqlcmd \\ -S localhost -U SA -P \"\u003cYourStrong@Passw0rd\u003e\" \\ -Q 'ALTER LOGIN SA WITH PASSWORD=\"\u003cYourNewStrong@Passw0rd\u003e\"' 连接 SQL Server 下列步骤在容器内部使用 SQL Server 命令行工具 sqlcmd 来连接 SQL Server。 使用 docker exec -it 命令在运行的容器内部启动交互式 Bash Shell。 在下面的示例中，sqlserver 是在创建容器时由 –name 参数指定的名称。 sudo docker exec -it sql1 \"bash\" 在容器内部使用 sqlcmd 进行本地连接。 默认情况下，sqlcmd 不在路径之中，因此需要指定完整路径。 /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P \"\u003cYourNewStrong@Passw0rd\u003e\" 如果成功，应会显示 sqlcmd 命令提示符：1\u003e ","date":"2022-08-31","objectID":"/blog/20220831/:0:4","tags":["study","Docker","SQLServer","Mac"],"title":"Mac使用SQLServer数据库","uri":"/blog/20220831/"},{"categories":["Markdown"],"content":"利用Navicat可视化工具连接Sql Server 下载 navicat 应用选择SQL Server服务，输入连接名、主机、用户名、密码进行连接。 提示： 密码一定不要填错，如果密码填错，会出现以下错误(一定要学会去Docker里面查看LOG): 注意： 创建sa账号时候的密码的左右\u003c\u003e两个尖括号也是属于密码的 我就是在实际操作中犯了如此低级的错误，望以鉴！ ","date":"2022-08-31","objectID":"/blog/20220831/:0:5","tags":["study","Docker","SQLServer","Mac"],"title":"Mac使用SQLServer数据库","uri":"/blog/20220831/"},{"categories":["Markdown"],"content":"总结 越努力越幸运! 以上就是本次分享的在Mac上如何使用 SQL Server 的详细教程,我们一起讨论！如果哪里有写的不好的地方，还希望大家提出来，在下方评论区留言，我加以修正！ ","date":"2022-08-31","objectID":"/blog/20220831/:0:6","tags":["study","Docker","SQLServer","Mac"],"title":"Mac使用SQLServer数据库","uri":"/blog/20220831/"},{"categories":["Markdown "],"content":"Java学习路线","date":"2022-08-13","objectID":"/blog/20220813/","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"Java 学习路线 ","date":"2022-08-13","objectID":"/blog/20220813/:0:0","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"前言 首先呢，我们要了解 Java 的应用场景和就业方向，看看和自己的学习目的是否一致，目前，Java 的岗位需求多，是后台开发的主流编程语言，功能强大，还是很值得学习的。 ","date":"2022-08-13","objectID":"/blog/20220813/:1:0","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"阶段 1：Java 入门 ","date":"2022-08-13","objectID":"/blog/20220813/:2:0","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"目标 培养兴趣、快速上手 ","date":"2022-08-13","objectID":"/blog/20220813/:2:1","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"前期准备 准备好一款在线、随时随地写代码的工具，不用在本地去安装和配置，是初学者的好帮手 推荐网站 - 菜鸟工具 准备一款记笔记的软件，学编程的过程中老师的思路、自己遇到的问题、解决问题的方法、心得感悟、遇到的好资料，都要记下来哦，好记性不如烂笔头，可以帮助你事半功倍。 推荐软件 - Typora 推荐使用 Markdown 语法编写（我的教程文章） 想学好编程，别背代码，要多写，把这句话刻到脑子里。 选视频和找资料的小技巧：多看评论区、多看隔壁评论区，不要看过期的视频。 ","date":"2022-08-13","objectID":"/blog/20220813/:2:2","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"Java 编程基础（45 天） 知识 Java 特点（看不懂没事，别背！） 环境搭建 Java 基础语法 数据类型 流程控制 数组 面向对象 方法 重载 封装 继承 多态 抽象类 接口 枚举 常用类 String 日期时间 集合类 泛型 注解 异常处理 多线程 IO 流 反射 学习建议 一定要持续学习，不能断！ 跟着书上的例子敲代码后，自主编写代码，并完成课后练习。 资源 视频 ⭐ 韩顺平 - 零基础 30 天学会 Java（900 多集，顺序安排很合理，每个知识真正的打碎了，通俗、有示例、有实战、有思想） 文档 ⭐ 菜鸟教程（可以在线练习） 廖雪峰 Java 教程 书籍 《Head First Java》 在线游戏 Codegym（玩玩前几关培养兴趣不错，但后面收费了） ","date":"2022-08-13","objectID":"/blog/20220813/:2:3","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"Java 8（3 天） 知识 Stream API Lambda 表达式 新日期时间 API 接口默认方法 资源 视频 ⭐ 宋红康 - 全网最全Java零基础入门教程（只看 Java 8 部分即可） 文档 ⭐ 菜鸟教程 书籍 《Java 8 实战》 工具 ⭐ 在线编写运行 Java 8 项目 Java 8 小代码片段 ","date":"2022-08-13","objectID":"/blog/20220813/:2:4","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"尾声 学完了 Java 基础后，有些同学会感到迷茫了啊，感觉好像啥也做不出来，不知道下一步做什么，我这一身的本领该如何施展啊？ 不要慌，也不要急着去学新技术，接下来我们要多用 Java 来写代码了，巩固基础，但是写什么呢？ 当然是数据结构和算法！ ","date":"2022-08-13","objectID":"/blog/20220813/:2:5","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"阶段 2：巩固基础 ","date":"2022-08-13","objectID":"/blog/20220813/:3:0","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"目标 想学好编程，计算机基础知识要学好。 比如算法，是程序员的灵魂。学好算法有助于我们理解程序、开拓思路，因此也是很多公司面试时考察的关键，在找工作前，还是要刷个上百道算法题目的。 我们这个阶段的目标是：熟练使用 Java 语言来编写程序，巩固 Java 的基础。 那直接用 Java 来写算法题目，一举两得，岂不美哉？ ","date":"2022-08-13","objectID":"/blog/20220813/:3:1","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"Java 基础（30 天） 学习建议 建议大家去阅读 《Java 核心技术卷 1》，这本书堪称经典，是帮助你复习巩固 Java 的不二之选，其中图形界面章节可以选择不看。 之后可以刷牛客的 Java 练习题，检验自己的水平，我当时刷了两遍。 资源 书籍 ⭐《Java 核心技术卷 1》 练习 ⭐ 牛客题库 ","date":"2022-08-13","objectID":"/blog/20220813/:3:2","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"数据结构与算法 知识 时间 / 空间复杂度分析 数据结构 数组 字符串 队列 栈 链表 集合 哈希表 二叉树 算法 排序 双指针 查找 分治 动态规划 递归 回溯 贪心 位运算 DFS BFS 图 学习建议 学算法一定要多思考、多练习！！！ 在复习 Java、巩固基础的过程中，每天可以坚持用 Java 做 2 - 3 道算法题目。 不用担心看不懂，直接进入 LeetCode 学习板块 LeetBook，提供了免费的教程，文字、图解、动画讲算法、在线练习应有尽有，从 0 开始，跟着学习基础知识、跟着教程刷一些同类题目，培养算法思路。 之后再由简单到复杂、由通过率高到低，自主刷题，多看题解，举一反三。 有条件的朋友也可以试着参与竞赛，没什么门槛，可以帮助你集中精神，而且周赛的题目还是挺友好的~ 资源 文章 ⭐ 刷了 1000 多道算法题，一点心得：鱼皮原创 在线教程 ⭐ LeetCode LeetBook 在线刷题 ⭐ LeetCode 书籍 ⭐《小灰的漫画算法》 ⭐《剑指 Offer》 《程序员代码面试指南》 图解算法数据结构 LeetCode 101（C++） LeetCode 题解（C++） LeetCode Cookbook（Go 语言） 视频 尚硅谷 Java 数据结构与算法（难度比面试的要求大一些，适合希望更全面学习的朋友） Leetcode 真题解析 工具 VisuAlgo 数据结构和算法动态可视化 数据结构可视化 网站 五分钟学算法 ","date":"2022-08-13","objectID":"/blog/20220813/:3:3","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"计算机基础 知识 计算机网络 HTTP / HTTPS 协议 网络模型 UDP / TCP 协议 网络安全 域名解析 操作系统 进程、线程 进程 / 线程间通讯方式 进程调度算法 进程 / 线程状态 死锁 内存管理 学习建议 在巩固基础期间，我建议大家多去了解计算机基础知识，比如操作系统、计算机网络。 但这一块知识说实话挺枯燥的，对吧，你说说我现在项目都不会做，你又让我看这些理论，是不是想让我头秃。 我的建议是，可以先看有趣的课外书，比如《图解 HTTP》等等，对基础知识先有个大致的印象，等后面有时间了再系统学习。 比如还在校园就跟着学校的进度学习就成，自学的话可以看下 《计算机网络微课堂》、 《清华操作系统原理》视频，有实力的小伙伴，能看懂大黑书就更好了。 资源 视频 《计算机网络微课堂》 《清华操作系统原理》 书籍 ⭐《图解 HTTP》 《网络是怎样连接的》 ⭐《图解 TCP / IP》 《编码》 《30天自制操作系统》 《计算机网络-自顶向下方法》（难度较大，不推荐新手看） 《现代操作系统》（难度较大，不推荐新手看） 《深入理解计算机系统》（难度较大，不推荐新手看） ","date":"2022-08-13","objectID":"/blog/20220813/:3:4","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"尾声 巩固基础要花至少 1 个月的时间，当你读完《Java 核心技术卷1》并且不用查询文档也能熟练地用 Java 做题时，就可以接着往下了。 ","date":"2022-08-13","objectID":"/blog/20220813/:3:5","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"阶段 3：Java 企业开发基础 ","date":"2022-08-13","objectID":"/blog/20220813/:4:0","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"目标 面向薪资编程，学习实际工作要用的技术，并能 独立 做出一个具有完整功能的 Java Web 项目。 ","date":"2022-08-13","objectID":"/blog/20220813/:4:1","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"MySQL 数据库（7 天） 企业中大部分业务数据都是用关系型数据库存储的，因此数据库是后台开发同学的必备技能，其中 MySQL 数据库是目前的主流，也是面试时的重点。 知识 基本概念 MySQL 搭建 SQL 语句编写 约束 索引 事务 设计数据库表 性能优化 学习建议 其中，SQL 语句编写 和 设计数据库表 这两个能力一定要有！ 比如让你做一个学生管理系统，你要能想到需要哪些表，比如学生表、班级表；每个表需要哪些字段、字段类型。 这就要求大家多写 SQL、多根据实际的业务场景去练习设计能力。 资源 视频 ⭐ 老杜 - mysql入门基础 + 数据库实战（较新、内容相对精炼，有习题） 尚硅谷 - MySQL基础教程（小姐姐讲课，但感觉音质一般） 在线练习 ⭐ SQL 自学网 ⭐ SQL 在线运行 文档 SQL - 菜鸟教程 MySQL - 菜鸟教程 ","date":"2022-08-13","objectID":"/blog/20220813/:4:2","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"开发框架（60 天） Java 之所以能成为主流的企业开发语言，很大一部分原因是它完善的框架生态，用好框架，不仅能够大大提升开发效率，还能提高项目的稳定性、减少维护成本。 开发框架是后台开发工作中不可或缺的，也是面试考察的重点，一定要好好学！ 不知道 Java 能做什么的朋友们，学完开发框架，就会有答案啦。 下面给大家推荐的都是企业中应用最多的主流开发框架，知识点比较零碎，就放在一起讲了。 知识 Java Web 描述：Java 网页应用开发基础 前端基础 XML JSON Servlet Filter Listener JSP JSTL Cookie Session Spring 5 描述：Java 轻量级应用框架 IOC AOP 事务 SpringMVC 描述：Java 轻量级 web 开发框架 什么是 MVC？ 请求与响应 Restful API 拦截器 配置 执行过程 MyBatis 描述：数据访问框架，操作数据库进行增删改查等操作 增删改查 全局配置 动态 SQL 缓存 和其他框架的整合 逆向工程 MyBatis Plus 描述：Mybatis 的增强工具，能够简化开发、提高效率 引入 通用 CRUD 条件构造器 代码生成器 插件扩展 自定义全局操作 SpringBoot 2 描述：简化 Spring 应用的初始搭建以及开发过程，提高效率 常用注解 资源整合 高级特性 本地热部署 Spring Security 描述：Spring 的安全管理框架 用户认证 权限管理 Maven / Gradle 描述：项目管理工具 构建 依赖管理 插件 配置 子父工程 学习建议 由于技术较多，且框架之间存在一定的联系，因此建议大家看同一系列的视频教程（尚硅谷、狂神说等等都可以），以保证学习内容的连续以及体验上的一致。 学这些技术的时候，千万不能懒 ！一定要多记笔记，并且跟着老师写代码。原理部分不要太过纠结，先以能跟着敲出代码、写出可运行的项目为主，有些东西做出来也能帮助你更好地理解理论。 学习顺序挺重要的，建议按我推荐的顺序学，不要一上手就学 SpringBoot。只有先学习下自己整合框架的方法，才能帮你理解 SpringBoot 解决的问题，感受到它的方便和高效。 Maven / Gradle 当工具用就好，面试基本不问，跟着框架教程去用就行了，先不用花太多时间去深入学。 资源 视频（按顺序看） ⭐ 尚硅谷最新版 JavaWeb 全套教程（前端部分最好也看下） ⭐ 尚硅谷 - Spring 5 框架最新版教程（idea版） ⭐ 尚硅谷 - SpringMVC 2021 最新教程 ⭐ 尚硅谷 - MyBatis 实战教程全套完整版 ⭐ 尚硅谷 - MyBatisPlus 教程 Maven 零基础入门教程（搞不懂 Maven 可以看看） ⭐ 雷丰阳 2021 版 SpringBoot2 零基础入门 尚硅谷 - SpringSecurity 框架教程 ","date":"2022-08-13","objectID":"/blog/20220813/:4:3","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"开发规范（3 天） 开发不规范，同事两行泪。 开发规范是团队开发中必须遵守的，有利于提高项目的开发效率、降低维护成本。 知识 代码规范 代码风格 命名 其他规则 提交规范 学习建议 简单过一遍大厂团队的规范手册就好了，以后做项目的时候能想起来的话就去使用，或者从书中、网上查规范，再去遵守。 项目做得多了，自然会养成好的习惯，不用刻意去记（毕竟每个团队规范也不完全相同，背了也没用）。 资源 书籍 ⭐ 阿里巴巴 Java 开发手册（搜索《Java开发手册》） 视频 华山版《Java开发手册》独家讲解 文档 Google Java Style Guide（谷歌 Java 代码规范） ","date":"2022-08-13","objectID":"/blog/20220813/:4:4","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"Git（3 天） 此前大家可能听说过 GitHub，一流的代码开源托管平台。 Git 和它可不一样，是一个版本控制工具，可以更好地管理和共享项目代码，比如把自己的代码传到 GitHub 上、或者从远程下载。 无论自己做项目、还是团队开发，Git 都是现在不可或缺的神器。 知识 工作区 分支 代码提交、推送、拉取、回退、重置 分支操作 代码合并、解决冲突 标签 cherry-pick 学习建议 每个命令跟着敲一遍，有个大致的印象，会用即可，用的多了自然熟悉了。 资源 视频 ⭐【尚硅谷】5h打通Git全套教程丨2021最新IDEA版 书籍 猴子都能懂的 Git 入门 ⭐ GitHub 漫游指南 文档 GitHub 官方文档 游戏 Learning Git Branching ","date":"2022-08-13","objectID":"/blog/20220813/:4:5","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"Linux（10 天） 企业中的很多前后台项目都是部署在 Linux 服务器上的，因此很有必要熟悉 Linux 的操作和脚本的编写。 后面学微服务、学架构都是在多台服务器操作，如果你不熟悉 Linux，会有点吃力。 知识 Linux 系统安装 环境变量 文件管理 用户管理 内存管理 磁盘管理 进程管理 网络管理 软件包管理 服务管理 日志管理 Linux 内核 常用命令 常用环境搭建 Shell 脚本编程 VIM 的使用 学习建议 多动手实践，建议自己购买一台云服务器，并且在本地搭建 Linux 虚拟机环境。 一定要自己从 0 开始手敲命令安装软件、部署服务，熟悉整个项目的上线流程。 每个命令至少要跟着敲一遍，了解它们的作用，并通过自然地练习，熟悉常用的 Linux 命令。 记不住没关系，用文档查就行了。 先会用，再理解。 资源 视频 ⭐ 2021 韩顺平 一周学会Linux（基于 CentOS 7.6 版本较新） 书籍 《鸟哥的 Linux 私房菜 —— 基础篇》（经典） 文档 Linux 工具快速教程（基础、工具进阶、工具参考） 实战 ⭐ 蓝桥云课 Linux 基础入门 腾讯云动手实验室 阿里云体验实验室 阿里云知行实验室 华为云沙箱实验室 社区 Linux 中国 工具 ⭐ Linux 命令搜索 Linux 命令大全手册 Linux 命令示例 宝塔 Linux 面板 ","date":"2022-08-13","objectID":"/blog/20220813/:4:6","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"前端基础（14 天） 虽然 Java 程序员面试时基本不会出现前端相关问题，但是在企业中，往往需要前后端程序员配合完成工作。会一些前端，不仅可以提高你们的协作效率，还能提高自己对整个项目的了解和掌控力，甚至能独立开发出一个完整项目！这点也是能给面试加分的。 知识 HTML CSS JavaScript Ajax Vue 学习建议 不需要学习太多的前端技术，熟悉下基础的前端三件套，了解前端是如何向后端发送请求来做数据交互的一般就够了。有时间的话可以学下 Vue ，是比较容易上手的主流前端开发框架，Vue + SpringBoot 还是很香的。 ","date":"2022-08-13","objectID":"/blog/20220813/:4:7","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"阶段 4：Java 企业开发进阶 ","date":"2022-08-13","objectID":"/blog/20220813/:5:0","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"目标 学习更多企业级开发技术和编程思想，能够结合多种技术，独立开发出架构合理的完整系统，解决实际问题 。 要了解为什么需要这个技术？什么时候用哪些技术？ ","date":"2022-08-13","objectID":"/blog/20220813/:5:1","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"设计模式（21 天） 设计模式是软件开发中解决一类问题的通用方法。 使用设计模式能让你写出更优雅、可维护的代码，也正因如此，很多框架源码都用到了设计模式，你不学很难看懂。 知识 创建型模式：对象实例化的模式，创建型模式用于解耦对象的实例化过程 单例模式 工厂方法模式 抽象工厂 建造者模式 原型模式 结构型模式：把类或对象结合在一起形成一个更大的结构 适配器模式 组合模式 装饰器模式 代理模式 享元模式 外观模式 桥接模式 行为型模式：类和对象如何交互，及划分责任和算法 迭代器模式 模板方法模式 策略模式 命令模式 状态模式 责任链模式 备忘录模式 观察者模式 访问者模式 中介者模式 解释器模式 学习建议 先理解概念，了解每个设计模式的特点和应用场景，再多加练习，运用到实际项目。 资源 书籍 ⭐《图解设计模式》（强烈推荐这本书，正是用 Java 语言实现，图多、有示例代码、有习题和答案，很不错） 《Head First 设计模式》 《大话设计模式》 《设计模式：可复用面向对象软件的基础》（大黑书，有能力的话也可以去读） 视频 尚硅谷图解 Java 设计模式 文档 菜鸟教程 图说设计模式 ","date":"2022-08-13","objectID":"/blog/20220813/:5:2","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"中间件（14 天） 除了框架外，企业项目开发也会用到大量独立的中间件，以解决某些实际问题，比如提高项目的性能、提高项目的稳定性和可靠性等。 下面分享几个最常用的主流中间件。 知识 Redis 缓存 数据类型 常用操作 Java 操作 Redis 主从模型搭建 哨兵集群搭建 日志持久化 应用场景 RabbitMQ 消息队列 消息队列的作用 生产消费模型 交换机模型 死信队列 延迟队列 消息持久化 Java 操作 集群搭建 Nginx 网关 Nginx 作用 正向代理 反向代理（负载均衡） 常用命令 配置 动静分离（网站部署） 集群搭建 学习建议 学会如何使用中间件并不难，先能够独立使用，了解他们的应用场景；再用 Java 来操作中间件，和项目相结合。 跟着视频教程实操一遍即可，可以等到面试前再去深入了解原理和高级特性。 资源 视频 ⭐ 尚硅谷 - 2021 最新 Redis 6 入门到精通教程（基于 Redis 6 的，推荐） ⭐ 尚硅谷 - 2021 最新 RabbitMQ 教程（很新很全面） ⭐ 尚硅谷 - Nginx 教程由浅入深（讲的比较全面） ⭐ Nginx 鱼皮 - 手把手带你从0搭建个人网站（简单演示 Nginx 部署网站） 文档 Redis 命令参考 Redis 面试题整理 RabbitMQ 中文文档 Nginx 中文文档 书籍 《Redis 实战》（经典） 《RabbitMQ 实战：高效部署分布式消息队列》（经典） 工具 ⭐ Redis 在线练习（强烈推荐） ⭐ RabbitMQ 在线模拟器 Nginx 配置在线生成 相关技术 缓存：Memcached、Ehcache 队列：Kafka、ActiveMQ、TubeMQ、RocketMQ 网关：HAProxy ","date":"2022-08-13","objectID":"/blog/20220813/:5:3","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"Netty 网络编程（14 天） 开源的 Java 网络编程框架，用于开发高性能（事件驱动、异步非阻塞）、高可靠的网络服务器和客户端程序。 很多网络框架和服务器程序都用到了 Netty 作为底层，学好 Netty 不仅可以让我们自己实现高性能服务器，也能更好地理解其他的框架应用、阅读源码。 知识 IO 模型（BIO / NIO） Channel Buffer Seletor Netty 模型 WebSocket 编程（动手做个聊天室） 学习建议 不同于之前学的 SSM 框架，Netty 还是需要一定学习成本的，一方面是国内资源太缺乏，另一方面很多重要的概念（比如 NIO）还是要多动手写代码调试才能理解。 还是建议先从视频入门，并且不建议在 Netty 上花太多时间，面试的时候一般也就考察一些 Netty 思想。 资源 视频 ⭐ 尚硅谷Netty教程 Netty 技术演讲（中文字幕版） 文档 Netty 4 用户指南 书籍 《Netty 实战》 相关技术 Vertx（比 Netty 简单多了，实在看不懂 Netty 也可以学习下这个） ","date":"2022-08-13","objectID":"/blog/20220813/:5:4","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"微服务（60 天） 随着互联网的发展，项目越来越复杂，单机且庞大的巨石项目已无法满足开发、运维、并发、可靠性等需求。 因此，后台架构不断演进，可以将庞大的项目拆分成一个个职责明确、功能独立的细小模块，模块可以部署在多台服务器上，相互配合协作，提供完整的系统能力。 换言之，想做大型项目，这块儿一定要好好学！ 知识 Dubbo 架构演进 RPC Zookeeper 服务提供者 服务消费者 项目搭建 微服务 微服务概念 Spring Cloud 框架 子父工程 服务注册与发现 注册中心 Eureka、Zookeeper、Consul Ribbon 负载均衡 Feign 服务调用 Hystrix 服务限流、降级、熔断 Resilience4j 服务容错 Gateway（Zuul）微服务网关 Config 分布式配置中心 分布式服务总线 分布式链路追踪 Spring Cloud Alibaba Nacos 注册、配置中心 OpenFeign 服务调用 Sentinel 流控 Seata 分布式事务 接口管理 Swagger 接口文档 Postman 接口测试 学习建议 时间不急的话，建议先从 Dubbo 学起，对分布式、RPC、微服务有些基本的了解，再去食用 Spring Cloud 全家桶会更香。 这部分内容的学习，原理 + 实践都很重要，也不要被各种高大上的词汇唬住了，都是上层（应用层）的东西，基本没有什么算法，跟着视频教程学，其实还是很好理解的。 分布式相关知识非常多，但这里不用刻意去背，先通过视频教程实战使用一些微服务框架，也能对其中的概念有基本的了解。 资源 视频 ⭐ 尚硅谷 Dubbo 教程 ⭐ 尚硅谷 SpringCloud（H版\u0026alibaba）框架开发教程（微服务分布式架构）（把国外的 Spring Cloud 和国内的 Spring Cloud Alibaba 结合在一起对比着去讲，主流技术栈、知识点都讲到了，真心不错！） 文档 Apache Dubbo 官方文档 Spring Cloud Alibaba 官方文档 ⭐ Swagger 教学文档（跟着快速开始直接用就好了） ","date":"2022-08-13","objectID":"/blog/20220813/:5:5","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"容器（7 天） 将应用和环境进行封装，相互隔离、独立部署、便于移植，提高安全性、提高开发和维护效率。 便于实现微服务、持续集成和交付。 知识 Docker 容器概念 镜像 部署服务 Dockerfile K8S（Kubernetes） 架构 部署应用 暴露服务 动态扩缩容 学习建议 会用 Docker / K8S 部署项目和服务就行，企业一般都有现成的平台直接用，面试考察不多，不用花太多时间。 资源 视频 ⭐【狂神说】Docker 最新超详细版教程通俗易懂 K8S 视频教程 书籍 《深入浅出 Docker》 文档 Docker — 从入门到实践 菜鸟教程 Docker 国外 Docker 官方文档 网站 Docker 中文社区（强烈推荐，有很多 Docker 技术文章和学习笔记） Docker Blog（国外 Docker 技术博客） 镜像源 Docker Hub 腾讯软件源 阿里云 Docker 仓库 ","date":"2022-08-13","objectID":"/blog/20220813/:5:6","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"CI / CD（3 天） 持续集成 / 持续交付，贯穿整个研发到项目上线的过程，提高效率。 大公司一般都有自己的 CI / CD 平台。 知识 什么是 CI / CD CI / CD 有什么好处 使用任一 CI / CD 平台 学习建议 了解它是什么，并且实战使用任一 CI / CD 平台，感受它和传统开发运维到底有什么不同，就足够了。其实很简单，不要花太多时间。 真正要自己去搭建的时候，跟着官方文档来就行。 资源 视频 ⭐【狂神说】CI/CD到底是什么？十分钟理解企业级DevOps（讲的非常棒！带你快速理解 CI / CD 的作用和部分原理） 尚硅谷 - Jenkins 持续集成工具教程（实在要用到 Jenkins 再去学） 文档 Jenkins 官方文档（有很多案例，要用的时候查一下就行了） 实战平台 ⭐ 微信云托管 前端托管 Webify ","date":"2022-08-13","objectID":"/blog/20220813/:5:7","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"阶段 5：项目实战 ","date":"2022-08-13","objectID":"/blog/20220813/:6:0","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"目标 综合所学技术从 0 到 1 开发和上线一个全面、有特色的、可以写进简历的个人项目。 ","date":"2022-08-13","objectID":"/blog/20220813/:6:1","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"学习建议 其实在之前的框架学习视频中应该就做过几个项目了，但相对不够完整和体系化。 有想法的同学可以做任何自己想做的项目，推荐参加一些作品类竞赛，练手、拿奖、收获项目经历一举三得。 暂时没想法的朋友，建议先跟着专门带做项目的视频教程做 1 - 2 套 Java 完整项目，一定要从 0 到 1 自己手写！ 有能力的朋友也可以试着用 GitHub 上的源码来学习啦~ 做一个完整的项目的确很不容易，建议大家根据自己的 时间、兴趣 选择 较新的、有配套源码的 教程，保持耐心。 下面推荐一些优质的、较新的项目实战视频教程 + 50 套项目源码。 ","date":"2022-08-13","objectID":"/blog/20220813/:6:2","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"视频教程 尚硅谷 - 谷粒学院 - 微服务 + 全栈 - 在线教育实战项目（全栈项目，前后端讲得都很全面） 尚硅谷 - 尚筹网 - Java项目实战开发教程 - SSM 框架 + 微服务架构（500 多集，包含完整的用户权限管理，功能丰富、讲得很细致全面） 黑马 - 24 小时搞定 Java 毕设电商项目 黑马程序员 Java 项目《传智健康》，超完整的企业级医疗行业项目 黑马程序员 Java 项目《万信金融》企业级开发实战，互联网金融行业解决方案 黑马程序员 Java 项目 SaaS 移动办公完整版《iHRM 人力资源管理系统》，跨行业 SaaS 办公整合性解决方案 黑马程序员 Java 大型分布式微服务闪聚支付项目，Java 移动支付全生态系统 黑马程序员 Java 项目《好客租房》 ","date":"2022-08-13","objectID":"/blog/20220813/:6:3","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"项目源码（50 套） 电商秒杀 天猫整站 J2EE 天猫整站 SSM 天猫整站 Springboot mall-learning（学习教程，架构、业务、技术要点全方位解析） SpringBoot 电商商城系统 Mall4j SpringBoot 完整电商系统 Mall（包括前台商城系统及后台管理系统，基于 SpringBoot+MyBatis 实现） newbee-mall（一套电商系统，包括 newbee-mall 商城系统及 newbee-mall-admin 商城后台管理系统，基于 Spring Boot 2.X 及相关技术栈开发） paascloud-master：\u003c\u003e（基于 spring cloud + vue + oAuth2.0，前后端分离商城系统） mall-swarm（一套微服务商城系统，采用了 Spring Cloud Greenwich、Spring Boot 2、MyBatis、Docker、Elasticsearch 等核心技术，同时提供了基于 Vue 的管理后台方便快速搭建系统） onemall（mall 商城，基于微服务的思想，构建在 B2C 电商场景下的项目实战。核心技术栈，是 Spring Boot + Dubbo 。未来，会重构成 Spring Cloud Alibaba） litemall（又一个小商城，litemall = Spring Boot 后端 + Vue 管理员前端 + 微信小程序用户前端 + Vue 用户移动端） xmall （基于SOA架构的分布式电商购物商城 前后端分离 前台商城:Vue全家桶 后台管理系统） miaosha（秒杀系统设计与实现） SecKill（基于 SpringBoot+Mybatis+Redis+RabbitMQ 秒杀系统） 博客论坛 Mblog：开源 Java 博客系统 halo：一个优秀的开源博客发布应用 forum-java：一款用 Java（spring boot） 实现的现代化社区（论坛/问答/BBS/社交网络/博客）系统平台 vhr：微人事是一个前后端分离的人力资源管理系统，项目采用 SpringBoot+Vue 开发。 favorites-web:云收藏 Spring Boot 2.X 开源项目。云收藏是一个使用 Spring Boot 构建的开源网站，可以让用户在线随时随地收藏的一个网站，在网站上分类整理收藏的网站或者文章。 community：码问，开源论坛、问答系统，现有功能提问、回复、通知、最新、最热、消除零回复功能。技术栈 Spring、Spring Boot、MyBatis、MySQL/H2、Bootstrap NiterForum：尼特社区-NiterForum-一个论坛/社区程序。后端Springboot/MyBatis/Maven/MySQL，前端Thymeleaf/Layui。可供初学者，学习、交流使用。 VBlog：V部落，Vue+SpringBoot实现的多用户博客管理平台! NiceFish：SpringBoot/SpringCloud 前后端分离项目 My-Blog： My Blog 是由 SpringBoot + Mybatis + Thymeleaf 等技术实现的 Java 博客系统，页面美观、功能齐全、部署简单及完善的代码，一定会给使用者无与伦比的体验。 My-Blog-layui：layui 版本的 My-Blog : A simple \u0026 beautiful blogging system implemented with spring-boot \u0026 layui \u0026 thymeleaf \u0026 mybatis My Blog 是由 SpringBoot + Layui + Mybatis + Thymeleaf 等技术实现的 Java 博客系统，页面美观、功能齐全、部署简单及完善的代码，一定会给使用者无与伦比的体验 symphony：Java 实现的现代化社区 管理系统 Spring-Cloud-Admin：Cloud-Admin 是国内首个基于 Spring Cloud 微服务化开发平台，具有统一授权、认证后台管理系统，其中包含具备用户管理、资源权限管理、网关 API 管理等多个模块，支持多业务系统并行开发，可以作为后端服务的开发脚手架。代码简洁，架构清晰，适合学习和直接项目中使用。核心技术采用 Spring Boot2 以及 Spring Cloud Gateway 相关核心组件，前端采用 vue-element-admin 组件。 bootshiro：基于 springboot+shiro+jwt 的资源无状态认证权限管理系统后端 悟空CRM：基于jfinal+vue+ElementUI的前后端分离CRM系统 EL-ADMIN：基于 SpringBoot 的后台管理系统 pig：基于 Spring Boot 2.2、 Spring Cloud Hoxton \u0026 Alibaba、 OAuth2 的 RBAC 权限管理系统。 FEBS-Shiro：Spring Boot 2.1.3，Shiro1.4.0 \u0026 Layui 2.5.4 权限管理系统。 Spring Boot-Shiro-Vue：基于Spring Boot-Shiro-Vue 的权限管理 studentmanager：基于springboot+mybatis学生管理系统 jshERP：华夏ERP基于SpringBoot框架和SaaS模式，立志为中小企业提供开源好用的ERP软件，目前专注进销存+财务功能。主要模块有零售管理、采购管理、销售管理、仓库管理、财务管理、报表查询、系统管理等。支持预付款、收入支出、仓库调拨、组装拆卸、订单等特色功能。拥有库存状况、出入库统计等报表。同时对角色和权限进行了细致全面控制，精确到每个按钮和菜单。 HotelSystem：酒店管理系统 Java,tomcat,mysql,servlet,jsp实现，没有使用任何框架 开发平台 open-capacity-platform：微服务能力开发平台 jeecg-boot：JeecgBoot是一款基于BPM的低代码平台！前后端分离架构 SpringBoot 2.x，SpringCloud，Ant Design\u0026Vue，Mybatis-plus，Shiro，JWT，支持微服务。强大的代码生成器让前后端代码一键生成，实现低代码开发！ 其他 学之思在线考试系统：一款 java + vue 的前后端分离的考试系统 PassJava-Platform：一款面试刷题的 Spring Cloud 开源系统 kkFileView：使用spring boot打造文件文档在线预览项目 dynamic-datasource：一个基于springboot的快速集成多数据源的启动器 moti-cloud：莫提网盘，基于 SpringBoot+MyBatis+ThymeLeaf+BootStrap，适合初学者 threadandjuc：three-high-import 高可用\\高可靠\\高性能，三高多线程导入系统（该项目意义为理论贯通) proxyee-down：http下载工具，基于http代理，支持多连接分块下载 hosp_order：医院预约挂号系统，基于 SSM 框架 趋势投资 SpringCloud DiyTomcat ","date":"2022-08-13","objectID":"/blog/20220813/:6:4","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"阶段 6：Java 高级 ","date":"2022-08-13","objectID":"/blog/20220813/:7:0","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"目标 不满足于能做，而是通过更 深入 和 广泛 的学习，实现高质量的代码和更优秀的架构，培养解决问题的能力。 ","date":"2022-08-13","objectID":"/blog/20220813/:7:1","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"并发编程（21 天） 对 Java 后端开发程序员来说，懂得如何利用有限的系统资源来提高系统的性能是很重要的，也是大厂面试考察的重点，因此并发编程（尤其是 Java 并发包的使用）这块的知识很重要。 把它放到高级，是因为在学并发编程前，需要有一定的编程经验、了解一定的操作系统知识。 知识 线程和进程 线程状态 并行和并发 同步和异步 Synchronized Volatile 关键字 Lock 锁 死锁 可重入锁 线程安全 线程池 JUC 的使用 AQS Fork Join CAS 学习建议 并发编程入门不难，依然是 先学会使用 基础的 Java 并发包， 再通过大量地实践和测试，了解一些原理，才能真正掌握何时使用、如何更合理地使用并发编程。 资源 视频 ⭐【尚硅谷】大厂必备技术之JUC并发编程2021最新版（特点是短、精、新） 黑马程序员全面深入学习Java并发编程（讲的很细、全面深入） 书籍 ⭐《Java并发编程实战》（国外的经典） ⭐《Java 并发编程艺术》（国人写的，理论思想内容较多，有时间建议反复看） 项目 ⭐ Java 并发知识点总结 ","date":"2022-08-13","objectID":"/blog/20220813/:7:2","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"JVM（30 天） 想要深入理解 Java，探秘 Java 跨平台的奥秘，一定要了解 Java 底层的虚拟机技术。 了解虚拟机、掌握虚拟机性能调优方法，有助于你写出更高性能、资源占用更小的优质程序。 在学习 JVM 的过程中，也能学到很多精妙的设计，开拓思路。 知识 JVM 内存结构 JVM 生命周期 主流虚拟机 Java 代码执行流程 类加载 类加载器 类加载过程 双亲委派机制 垃圾回收 垃圾回收器 垃圾回收策略 垃圾回收算法 StopTheWorld 字节码 内存分配和回收 JVM 性能调优 性能分析方法 常用工具 参数设置 学习建议 JVM 的知识略显枯燥，建议先看视频，有实操的地方一定要实操！自己多去分析。 第一遍不理解没有关系，可以再看书来巩固，想要真正学好，《深入理解 Java 虚拟机（第三版）》一定要读。 如果只是为了通过面试可以直接看更精简的视频，比如狂神的。 资源 视频 ⭐ 尚硅谷宋红康 - JVM 全套教程详解（讲得相当全面！附有实操） 【狂神说Java】JVM快速入门篇（讲得有点浅，但都是面试重点，时间紧的小伙伴可以直接看这个） 书籍 ⭐《深入理解 Java 虚拟机（第三版）》（有理论有实践，内容丰富，不可多得的 JVM 学习神书，就是有点废头发） 项目 ⭐ Java 虚拟机底层原理知识总结 实战 阿里云 JVM 实战 ","date":"2022-08-13","objectID":"/blog/20220813/:7:3","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"架构设计 分布式 分布式理论 CAP BASE 分布式缓存 Redis Memcached Etcd 一致性算法 Raft 一致性哈希 分布式事务 分布式 id 生成 分布式服务调用 分布式存储 分布式数据库 分布式文件系统 分布式协调 Zookeeper 分布式监控 Prometheus 分布式消息队列 RabbitMQ Kafka Apache Pulsar 分布式日志收集 Elastic Stack Loki 分布式搜索引擎 Elasticsearch 分布式链路追踪 Apache SkyWalking 分布式配置中心 Apollo Nacos 高可用 主从 异地多活 容灾备份 高并发 数据库 分库分表 读写分离 缓存 缓存雪崩 缓存击穿 缓存穿透 负载均衡 负载均衡算法 软硬件负载均衡（2、3、4、7 层） 其他 监控告警 领域驱动设计 应用安全 线上故障分析 服务网格 Serverless 云原生 学习建议 多看文章多思考 ","date":"2022-08-13","objectID":"/blog/20220813/:7:4","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"阶段 7：Java 求职 ","date":"2022-08-13","objectID":"/blog/20220813/:8:0","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"目标 找到好工作 ","date":"2022-08-13","objectID":"/blog/20220813/:8:1","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"建议 尽早做规划，可以通过大厂招聘官网的岗位描述来了解岗位的要求 雕琢一份优秀的简历，推荐阅读 多读面经，坚持刷算法 多参与面试，持续复盘总结 ","date":"2022-08-13","objectID":"/blog/20220813/:8:2","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"资源 岗位要求 阿里 Java 开发 腾讯后台开发 腾讯全栈开发 腾讯运营开发 美团后端开发 华为软件开发 知识总结 ⭐ 牛客 Java 面试宝典 ⭐ JavaGuide ⭐ CS-Notes 阿里 Java 技术图谱 面经 ⭐ 2021 最新 Java 笔试、面试题合集（密码：lkw1） ⭐ 牛客面经 视频 ⭐ 尚硅谷 2021 逆袭版 Java 面试题第三季 ⭐ 阿里大佬透彻讲解 Java 面试 500 道必考题 ","date":"2022-08-13","objectID":"/blog/20220813/:8:3","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"阶段 8：持续学习 ","date":"2022-08-13","objectID":"/blog/20220813/:9:0","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"目标 持续追求技术的深度和广度，培养自己的 核心竞争力 和 不可替代性 ，学无止境！ ","date":"2022-08-13","objectID":"/blog/20220813/:9:1","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"学习建议 自主学习，自主搜索教程，多看书，多阅读技术博客，多实践。 ","date":"2022-08-13","objectID":"/blog/20220813/:9:2","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"学习方向 框架源码 Spring SpringBoot SpringMVC MyBatis Netty Dubbo SpringCloud 计算机原理 《算法导论》 《现代操作系统》 《深入理解计算机系统》 《编译原理》 《计算机网络：自顶向下方法》 《计算机程序的构造和解释》 《数据库系统概念》 数据库 / 中间件 / 分布式 数据库 MySQL PostgreSQL 缓存 Redis 队列 Apache Kafka Apache Pulsar 搜索引擎 Elastic Stack 容器 Docker K8S 解决方案 广告 电商 搜索 游戏 即时通讯 社交 CMS ERP OA 架构 亿级流量架构 秒杀系统 架构选型能力 大数据 5V 特点 Hadoop HDFS MapReduce Spark Flink Storm Hive HBase Druid Kylin Pig Mahout 前沿技术 云原生 Quasar Framework ","date":"2022-08-13","objectID":"/blog/20220813/:9:3","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"自学 Java 专题资源 GitHub Java 专区 GitHub Java 合集 StackOverflow（解决问题必备） 掘金 Java 专区 美团技术团队 阿里技术团队 有赞技术团队 ","date":"2022-08-13","objectID":"/blog/20220813/:9:4","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"尾声 ","date":"2022-08-13","objectID":"/blog/20220813/:10:0","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown "],"content":"编程误区 我不适合学编程？❌（兴趣比天赋更重要，不要怀疑自己） 忽视基础，急于求成 ❌（勿以浮沙筑高台） 数学、英语差，就学不好编程 ❌（开发工作基本不用高等数学，英语可以使用翻译软件、工作中提升） 编程时，刻意记忆代码 ❌（知道每行代码的意义，能看文档写出来就行） 每行代码都要追求完美 ❌（何为完美？每个人的定义不同） 用百度搜索、复制粘贴的都是菜鸡程序员 ❌（艹） 我做的项目太小了，就不整理了 ❌（自己的每个项目都要整理，可以记录自己的成长） 跟别人交流很麻烦，我更愿意自己写代码 ❌（1 + 1 \u003e 2，切勿闭门造车，不过也要找到合适的同学去交流） 做别人做过的项目没有意义 ❌（连别人做过的项目都做不出，还想造新轮子？） 遇到 Bug，想办法绕过而不是寻找解决方案 ❌（Bug 最能使人成长） 遇到问题，第一时间去问别人而非自己解决 ❌（建议阅读《提问的智慧》） 花了很多时间、看了很多书，就能学好编程 ❌（编程最忌讳纸上谈兵） 只向前学习，不整理学过的知识 ❌（建议每学完一个知识，都去回想、总结、写心得，这个时间的花费是值得的） 单元测试不重要 ❌（一棍打死） 写文档不重要 ❌（一棍打死） 和我无关的工作，就不需要了解 ❌（了解团队、同行是很重要的，全局视野） 收藏的资源从来不看，就不收藏了 ❌（万一以后用到了呢？） 不去考虑需求的价值，而是一味寻求解决方案 ❌（不要成为需求机器，要有自己的独立思考） 资料参照：程序员鱼皮 （创作不易，转载下载请注明创者，谢谢） ","date":"2022-08-13","objectID":"/blog/20220813/:10:1","tags":["java","study","Java学习路线"],"title":"Java 学习路线","uri":"/blog/20220813/"},{"categories":["Markdown"],"content":"消去浮躁，沉淀精华.","date":"2022-08-07","objectID":"/blog/20220807/","tags":["daily","study"],"title":"决定重新回归","uri":"/blog/20220807/"},{"categories":["Markdown"],"content":"去浮去燥，砥砺前行 ","date":"2022-08-07","objectID":"/blog/20220807/:0:0","tags":["daily","study"],"title":"决定重新回归","uri":"/blog/20220807/"},{"categories":["Markdown"],"content":"起因 回想起自己因为备考以及种种原因，已经将近一年没有真正自己独立开发代码了，会想之前手撕代码的日子还是很怀念的，虽让当时很累，天天能在电脑面前坐上个十几个小时（非卷王），但那时真的收获满满，心满意足😀，现在虽然已经成功上岸，但新的目标也随之而来，进入大厂，我深知进入大厂的难度，毕竟谁不想年入百万呢😁，今天我再次登陆我的GitHub时，看着当年满腔热血搭建的Blog，至今还没有发布任何像样文章，真是感慨万千，于是我今天又重新部署完成了我的Blog，以便记录自己的成长，完善自我，早日成为别人眼中的大牛🐮。 ","date":"2022-08-07","objectID":"/blog/20220807/:0:1","tags":["daily","study"],"title":"决定重新回归","uri":"/blog/20220807/"},{"categories":["Markdown"],"content":"计划 从现在开始，我要给自己制定相应日程目标，不能再每天只是娱乐至上了🙈 根据学习路线图查漏补缺（学习路线图后面会制作） 每天刷题，保持头脑（选择+编程） 遇到经常犯的错误或难题解决后，通过Blog记录下来，以便自己温习 每天空闲时间看看大牛技术分享以及分享的面经 ","date":"2022-08-07","objectID":"/blog/20220807/:0:2","tags":["daily","study"],"title":"决定重新回归","uri":"/blog/20220807/"},{"categories":["Markdown"],"content":"总结 虽然不知道后面会继续到哪里，但总算迈出了今天的第一步，后面我也会继续努力，朝着自己预期的目标拼劲全力，加油阿豪，未来可期！ ","date":"2022-08-07","objectID":"/blog/20220807/:0:3","tags":["daily","study"],"title":"决定重新回归","uri":"/blog/20220807/"},{"categories":["Markdown"],"content":"Hugo 中的 Emoji 的用法指南.","date":"2021-07-01","objectID":"/blog/emoji/","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"Emoji 可以通过多种方式在 Hugo 项目中启用. emojify 方法可以直接在模板中调用, 或者使用行内 Shortcodes. 要全局使用 emoji, 需要在你的网站配置中设置 enableEmoji 为 true, 然后你就可以直接在文章中输入 emoji 的代码. 它们以冒号开头和结尾，并且包含 emoji 的 代码: 去露营啦! :tent: 很快就回来. 真开心! :joy: 呈现的输出效果如下: 去露营啦! ⛺ 很快就回来. 真开心! 😂 以下符号清单是 emoji 代码的非常有用的参考. ","date":"2021-07-01","objectID":"/blog/emoji/:0:0","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"表情与情感 ","date":"2021-07-01","objectID":"/blog/emoji/:1:0","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"笑脸表情 图标 代码 图标 代码 😀 grinning 😃 smiley 😄 smile 😁 grin 😆 laughing satisfied 😅 sweat_smile 🤣 rofl 😂 joy 🙂 slightly_smiling_face 🙃 upside_down_face 😉 wink 😊 blush 😇 innocent ","date":"2021-07-01","objectID":"/blog/emoji/:1:1","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"爱意表情 图标 代码 图标 代码 😍 heart_eyes 😘 kissing_heart 😗 kissing ☺️ relaxed 😚 kissing_closed_eyes 😙 kissing_smiling_eyes ","date":"2021-07-01","objectID":"/blog/emoji/:1:2","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"吐舌头表情 图标 代码 图标 代码 😋 yum 😛 stuck_out_tongue 😜 stuck_out_tongue_winking_eye 😝 stuck_out_tongue_closed_eyes 🤑 money_mouth_face ","date":"2021-07-01","objectID":"/blog/emoji/:1:3","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"带手的表情 图标 代码 图标 代码 🤗 hugs 🤔 thinking ","date":"2021-07-01","objectID":"/blog/emoji/:1:4","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"中性表情 图标 代码 图标 代码 🤐 zipper_mouth_face 😐 neutral_face 😑 expressionless 😶 no_mouth 😏 smirk 😒 unamused 🙄 roll_eyes 😬 grimacing 🤥 lying_face ","date":"2021-07-01","objectID":"/blog/emoji/:1:5","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"困倦的表情 图标 代码 图标 代码 😌 relieved 😔 pensive 😪 sleepy 🤤 drooling_face 😴 sleeping ","date":"2021-07-01","objectID":"/blog/emoji/:1:6","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"不适的表情 图标 代码 图标 代码 😷 mask 🤒 face_with_thermometer 🤕 face_with_head_bandage 🤢 nauseated_face 🤧 sneezing_face 😵 dizzy_face ","date":"2021-07-01","objectID":"/blog/emoji/:1:7","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"戴帽子的表情 图标 代码 图标 代码 🤠 cowboy_hat_face ","date":"2021-07-01","objectID":"/blog/emoji/:1:8","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"戴眼镜的表情 图标 代码 图标 代码 😎 sunglasses 🤓 nerd_face ","date":"2021-07-01","objectID":"/blog/emoji/:1:9","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"担心的表情 图标 代码 图标 代码 😕 confused 😟 worried 🙁 slightly_frowning_face ☹ frowning_face 😮 open_mouth 😯 hushed 😲 astonished 😳 flushed 😦 frowning 😧 anguished 😨 fearful 😰 cold_sweat 😥 disappointed_relieved 😢 cry 😭 sob 😱 scream 😖 confounded 😣 persevere 😞 disappointed 😓 sweat 😩 weary 😫 tired_face ","date":"2021-07-01","objectID":"/blog/emoji/:1:10","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"否定的表情 图标 代码 图标 代码 😤 triumph 😡 pout rage 😠 angry 😈 smiling_imp 👿 imp 💀 skull ☠️ skull_and_crossbones ","date":"2021-07-01","objectID":"/blog/emoji/:1:11","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"特殊打扮的表情 图标 代码 图标 代码 💩 hankey poop shit 🤡 clown_face 👹 japanese_ogre 👺 japanese_goblin 👻 ghost 👽 alien 👾 space_invader 🤖 robot ","date":"2021-07-01","objectID":"/blog/emoji/:1:12","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"猫脸表情 图标 代码 图标 代码 😺 smiley_cat 😸 smile_cat 😹 joy_cat 😻 heart_eyes_cat 😼 smirk_cat 😽 kissing_cat 🙀 scream_cat 😿 crying_cat_face 😾 pouting_cat ","date":"2021-07-01","objectID":"/blog/emoji/:1:13","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"猴脸表情 图标 代码 图标 代码 🙈 see_no_evil 🙉 hear_no_evil 🙊 speak_no_evil ","date":"2021-07-01","objectID":"/blog/emoji/:1:14","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"情感 图标 代码 图标 代码 💋 kiss 💌 love_letter 💘 cupid 💝 gift_heart 💖 sparkling_heart 💗 heartpulse 💓 heartbeat 💞 revolving_hearts 💕 two_hearts 💟 heart_decoration ❣️ heavy_heart_exclamation 💔 broken_heart ❤️ heart 💛 yellow_heart 💚 green_heart 💙 blue_heart 💜 purple_heart 🖤 black_heart 💯 100 💢 anger 💥 boom collision 💫 dizzy 💦 sweat_drops 💨 dash 🕳️ hole 💣 bomb 💬 speech_balloon 👁️‍🗨️ eye_speech_bubble 🗯️ right_anger_bubble 💭 thought_balloon 💤 zzz ","date":"2021-07-01","objectID":"/blog/emoji/:1:15","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"人与身体 ","date":"2021-07-01","objectID":"/blog/emoji/:2:0","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"张开手掌的手势 图标 代码 图标 代码 👋 wave 🤚 raised_back_of_hand 🖐️ raised_hand_with_fingers_splayed ✋ hand raised_hand 🖖 vulcan_salute ","date":"2021-07-01","objectID":"/blog/emoji/:2:1","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"部分手指的手势 图标 代码 图标 代码 👌 ok_hand ✌️ v 🤞 crossed_fingers 🤘 metal 🤙 call_me_hand ","date":"2021-07-01","objectID":"/blog/emoji/:2:2","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"一根手指的手势 图标 代码 图标 代码 👈 point_left 👉 point_right 👆 point_up_2 🖕 fu middle_finger 👇 point_down ☝️ point_up ","date":"2021-07-01","objectID":"/blog/emoji/:2:3","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"握紧的手势 图标 代码 图标 代码 👍 +1 thumbsup 👎 -1 thumbsdown ✊ fist fist_raised 👊 facepunch fist_oncoming punch 🤛 fist_left 🤜 fist_right ","date":"2021-07-01","objectID":"/blog/emoji/:2:4","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"两只手 图标 代码 图标 代码 👏 clap 🙌 raised_hands 👐 open_hands 🤝 handshake 🙏 pray ","date":"2021-07-01","objectID":"/blog/emoji/:2:5","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"握住东西的手势 图标 代码 图标 代码 ✍️ writing_hand 💅 nail_care 🤳 selfie ","date":"2021-07-01","objectID":"/blog/emoji/:2:6","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"身体部位 图标 代码 图标 代码 💪 muscle 👂 ear 👃 nose 👀 eyes 👁️ eye 👅 tongue 👄 lips ","date":"2021-07-01","objectID":"/blog/emoji/:2:7","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"人 图标 代码 图标 代码 👶 baby 👦 boy 👧 girl :blonde_man: blonde_man person_with_blond_hair 👨 man 👩 woman 👱‍♀️ blonde_woman 👴 older_man 👵 older_woman ","date":"2021-07-01","objectID":"/blog/emoji/:2:8","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"身体动作 图标 代码 图标 代码 🙍‍♀️ frowning_woman person_frowning 🙍‍♂️ frowning_man 🙎‍♀️ person_with_pouting_face pouting_woman 🙎‍♂️ pouting_man 🙅‍♀️ ng_woman no_good no_good_woman 🙅‍♂️ ng_man no_good_man 🙆‍♀️ ok_woman 🙆‍♂️ ok_man 💁‍♀️ information_desk_person sassy_woman tipping_hand_woman 💁‍♂️ sassy_man tipping_hand_man 🙋‍♀️ raising_hand raising_hand_woman 🙋‍♂️ raising_hand_man 🙇‍♂️ bow bowing_man 🙇‍♀️ bowing_woman 🤦‍♂️ man_facepalming 🤦‍♀️ woman_facepalming 🤷‍♂️ man_shrugging 🤷‍♀️ woman_shrugging ","date":"2021-07-01","objectID":"/blog/emoji/:2:9","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"人物角色 图标 代码 图标 代码 👨‍⚕️ man_health_worker 👩‍⚕️ woman_health_worker 👨‍🎓 man_student 👩‍🎓 woman_student 👨‍🏫 man_teacher 👩‍🏫 woman_teacher 👨‍⚖️ man_judge 👩‍⚖️ woman_judge 👨‍🌾 man_farmer 👩‍🌾 woman_farmer 👨‍🍳 man_cook 👩‍🍳 woman_cook 👨‍🔧 man_mechanic 👩‍🔧 woman_mechanic 👨‍🏭 man_factory_worker 👩‍🏭 woman_factory_worker 👨‍💼 man_office_worker 👩‍💼 woman_office_worker 👨‍🔬 man_scientist 👩‍🔬 woman_scientist 👨‍💻 man_technologist 👩‍💻 woman_technologist 👨‍🎤 man_singer 👩‍🎤 woman_singer 👨‍🎨 man_artist 👩‍🎨 woman_artist 👨‍✈️ man_pilot 👩‍✈️ woman_pilot 👨‍🚀 man_astronaut 👩‍🚀 woman_astronaut 👨‍🚒 man_firefighter 👩‍🚒 woman_firefighter 👮‍♂️ cop policeman 👮‍♀️ policewoman 🕵 detective male_detective 🕵️‍♀️ female_detective 💂‍♂️ guardsman 💂‍♀️ guardswoman 👷‍♂️ construction_worker construction_worker_man 👷‍♀️ construction_worker_woman 🤴 prince 👸 princess 👳‍♂️ man_with_turban 👳‍♀️ woman_with_turban 👲 man_with_gua_pi_mao 🤵‍♂️ man_in_tuxedo 👰 bride_with_veil 🤰 pregnant_woman ","date":"2021-07-01","objectID":"/blog/emoji/:2:10","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"幻想的人物 图标 代码 图标 代码 👼 angel 🎅 santa 🤶 mrs_claus ","date":"2021-07-01","objectID":"/blog/emoji/:2:11","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"人物活动 图标 代码 图标 代码 💆‍♀️ massage massage_woman 💆‍♂️ massage_man 💇‍♀️ haircut haircut_woman 💇‍♂️ haircut_man 🚶‍♂️ walking walking_man 🚶‍♀️ walking_woman 🏃‍♂️ runner running running_man 🏃‍♀️ running_woman 💃 dancer 🕺 man_dancing 🕴️ business_suit_levitating 👯‍♀️ dancers dancing_women 👯‍♂️ dancing_men ","date":"2021-07-01","objectID":"/blog/emoji/:2:12","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"体育 图标 代码 图标 代码 🤺 person_fencing 🏇 horse_racing ⛷️ skier 🏂 snowboarder 🏌️‍♂️ golfing_man 🏌️‍♀️ golfing_woman 🏄‍♂️ surfer surfing_man 🏄‍♀️ surfing_woman 🚣‍♂️ rowboat rowing_man 🚣‍♀️ rowing_woman 🏊‍♂️ swimmer swimming_man 🏊‍♀️ swimming_woman ⛹️‍♂️ basketball_man ⛹️‍♀️ basketball_woman 🏋️‍♂️ weight_lifting_man 🏋️‍♀️ weight_lifting_woman 🚴‍♂️ bicyclist biking_man 🚴‍♀️ biking_woman 🚵‍♂️ mountain_bicyclist mountain_biking_man 🚵‍♀️ mountain_biking_woman 🤸‍♂️ man_cartwheeling 🤸‍♀️ woman_cartwheeling 🤼‍♂️ men_wrestling 🤼‍♀️ women_wrestling 🤽‍♂️ man_playing_water_polo 🤽‍♀️ woman_playing_water_polo 🤾‍♂️ man_playing_handball 🤾‍♀️ woman_playing_handball 🤹‍♂️ man_juggling 🤹‍♀️ woman_juggling ","date":"2021-07-01","objectID":"/blog/emoji/:2:13","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"休息 图标 代码 图标 代码 🛀 bath 🛌 sleeping_bed ","date":"2021-07-01","objectID":"/blog/emoji/:2:14","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"家庭 图标 代码 图标 代码 👭 two_women_holding_hands 👫 couple 👬 two_men_holding_hands 👩‍❤️‍💋‍👨 couplekiss_man_woman 👨‍❤️‍💋‍👨 couplekiss_man_man 👩‍❤️‍💋‍👩 couplekiss_woman_woman 💑 couple_with_heart couple_with_heart_woman_man 👨‍❤️‍👨 couple_with_heart_man_man 👩‍❤️‍👩 couple_with_heart_woman_woman 👨‍👩‍👦 family family_man_woman_boy 👨‍👩‍👧 family_man_woman_girl 👨‍👩‍👧‍👦 family_man_woman_girl_boy 👨‍👩‍👦‍👦 family_man_woman_boy_boy 👨‍👩‍👧‍👧 family_man_woman_girl_girl 👨‍👨‍👦 family_man_man_boy 👨‍👨‍👧 family_man_man_girl 👨‍👨‍👧‍👦 family_man_man_girl_boy 👨‍👨‍👦‍👦 family_man_man_boy_boy 👨‍👨‍👧‍👧 family_man_man_girl_girl 👩‍👩‍👦 family_woman_woman_boy 👩‍👩‍👧 family_woman_woman_girl 👩‍👩‍👧‍👦 family_woman_woman_girl_boy 👩‍👩‍👦‍👦 family_woman_woman_boy_boy 👩‍👩‍👧‍👧 family_woman_woman_girl_girl 👨‍👦 family_man_boy 👨‍👦‍👦 family_man_boy_boy 👨‍👧 family_man_girl 👨‍👧‍👦 family_man_girl_boy 👨‍👧‍👧 family_man_girl_girl 👩‍👦 family_woman_boy 👩‍👦‍👦 family_woman_boy_boy 👩‍👧 family_woman_girl 👩‍👧‍👦 family_woman_girl_boy 👩‍👧‍👧 family_woman_girl_girl ","date":"2021-07-01","objectID":"/blog/emoji/:2:15","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"人物符号 图标 代码 图标 代码 🗣 speaking_head 👤 bust_in_silhouette 👥 busts_in_silhouette 👣 footprints ","date":"2021-07-01","objectID":"/blog/emoji/:2:16","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"动物与自然 ","date":"2021-07-01","objectID":"/blog/emoji/:3:0","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"哺乳动物 图标 代码 图标 代码 🐵 monkey_face 🐒 monkey 🦍 gorilla 🐶 dog 🐕 dog2 🐩 poodle 🐺 wolf 🦊 fox_face 🐱 cat 🐈 cat2 🦁 lion 🐯 tiger 🐅 tiger2 🐆 leopard 🐴 horse 🐎 racehorse 🦄 unicorn 🦌 deer 🐮 cow 🐂 ox 🐃 water_buffalo 🐄 cow2 🐷 pig 🐖 pig2 🐗 boar 🐽 pig_nose 🐏 ram 🐑 sheep 🐐 goat 🐪 dromedary_camel 🐫 camel 🐘 elephant 🦏 rhinoceros 🐭 mouse 🐁 mouse2 🐀 rat 🐹 hamster 🐰 rabbit 🐇 rabbit2 🐿️ chipmunk 🦇 bat 🐻 bear 🐨 koala 🐼 panda_face 🐾 feet paw_prints ","date":"2021-07-01","objectID":"/blog/emoji/:3:1","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"鸟类 图标 代码 图标 代码 🦃 turkey 🐔 chicken 🐓 rooster 🐣 hatching_chick 🐤 baby_chick 🐥 hatched_chick 🐦 bird 🐧 penguin 🕊 dove 🦅 eagle 🦆 duck 🦉 owl ","date":"2021-07-01","objectID":"/blog/emoji/:3:2","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"两栖动物 icon code icon code 🐸 frog ","date":"2021-07-01","objectID":"/blog/emoji/:3:3","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"爬虫类 图标 代码 图标 代码 🐊 crocodile 🐢 turtle 🦎 lizard 🐍 snake 🐲 dragon_face 🐉 dragon ","date":"2021-07-01","objectID":"/blog/emoji/:3:4","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"海洋动物 图标 代码 图标 代码 🐳 whale 🐋 whale2 🐬 dolphin flipper 🐟 fish 🐠 tropical_fish 🐡 blowfish 🦈 shark 🐙 octopus 🐚 shell ","date":"2021-07-01","objectID":"/blog/emoji/:3:5","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"虫类 图标 代码 图标 代码 🐌 snail 🦋 butterfly 🐛 bug 🐜 ant 🐝 bee honeybee 🪲 beetle 🕷️ spider 🕸️ spider_web 🦂 scorpion ","date":"2021-07-01","objectID":"/blog/emoji/:3:6","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"花类植物 图标 代码 图标 代码 💐 bouquet 🌸 cherry_blossom 💮 white_flower 🏵️ rosette 🌹 rose 🥀 wilted_flower 🌺 hibiscus 🌻 sunflower 🌼 blossom 🌷 tulip ","date":"2021-07-01","objectID":"/blog/emoji/:3:7","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"其它植物 图标 代码 图标 代码 🌱 seedling 🌲 evergreen_tree 🌳 deciduous_tree 🌴 palm_tree 🌵 cactus 🌾 ear_of_rice 🌿 herb ☘️ shamrock 🍀 four_leaf_clover 🍁 maple_leaf 🍂 fallen_leaf 🍃 leaves ","date":"2021-07-01","objectID":"/blog/emoji/:3:8","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"食物与饮料 ","date":"2021-07-01","objectID":"/blog/emoji/:4:0","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"水果 图标 代码 图标 代码 🍇 grapes 🍈 melon 🍉 watermelon 🍊 mandarin orange tangerine 🍋 lemon 🍌 banana 🍍 pineapple 🍎 apple 🍏 green_apple 🍐 pear 🍑 peach 🍒 cherries 🍓 strawberry 🥝 kiwi_fruit 🍅 tomato ","date":"2021-07-01","objectID":"/blog/emoji/:4:1","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"蔬菜 图标 代码 图标 代码 🥑 avocado 🍆 eggplant 🥔 potato 🥕 carrot 🌽 corn 🌶️ hot_pepper 🥒 cucumber 🍄 mushroom 🥜 peanuts 🌰 chestnut ","date":"2021-07-01","objectID":"/blog/emoji/:4:2","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"快餐 图标 代码 图标 代码 🍞 bread 🥐 croissant 🥖 baguette_bread 🥞 pancakes 🧀 cheese 🍖 meat_on_bone 🍗 poultry_leg 🥓 bacon 🍔 hamburger 🍟 fries 🍕 pizza 🌭 hotdog 🌮 taco 🌯 burrito 🥙 stuffed_flatbread 🥚 egg 🍳 fried_egg 🥘 shallow_pan_of_food 🍲 stew 🥗 green_salad 🍿 popcorn ","date":"2021-07-01","objectID":"/blog/emoji/:4:3","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"亚洲食物 图标 代码 图标 代码 🍱 bento 🍘 rice_cracker 🍙 rice_ball 🍚 rice 🍛 curry 🍜 ramen 🍝 spaghetti 🍠 sweet_potato 🍢 oden 🍣 sushi 🍤 fried_shrimp 🍥 fish_cake 🍡 dango ","date":"2021-07-01","objectID":"/blog/emoji/:4:4","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"海鲜 图标 代码 图标 代码 🦀 crab 🦐 shrimp 🦑 squid ","date":"2021-07-01","objectID":"/blog/emoji/:4:5","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"甜点 图标 代码 图标 代码 🍦 icecream 🍧 shaved_ice 🍨 ice_cream 🍩 doughnut 🍪 cookie 🎂 birthday 🍰 cake 🍫 chocolate_bar 🍬 candy 🍭 lollipop 🍮 custard 🍯 honey_pot ","date":"2021-07-01","objectID":"/blog/emoji/:4:6","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"饮料 图标 代码 图标 代码 🍼 baby_bottle 🥛 milk_glass ☕ coffee 🍵 tea 🍶 sake 🍾 champagne 🍷 wine_glass 🍸 cocktail 🍹 tropical_drink 🍺 beer 🍻 beers 🥂 clinking_glasses 🥃 tumbler_glass ","date":"2021-07-01","objectID":"/blog/emoji/:4:7","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"餐具 图标 代码 图标 代码 🍽️ plate_with_cutlery 🍴 fork_and_knife 🥄 spoon 🔪 hocho knife 🏺 amphora ","date":"2021-07-01","objectID":"/blog/emoji/:4:8","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"旅游与地理 ","date":"2021-07-01","objectID":"/blog/emoji/:5:0","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"地图 图标 代码 图标 代码 🌍 earth_africa 🌎 earth_americas 🌏 earth_asia 🌐 globe_with_meridians 🗺️ world_map 🗾 japan ","date":"2021-07-01","objectID":"/blog/emoji/:5:1","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"地理现象 图标 代码 图标 代码 🏔 mountain_snow ⛰️ mountain 🌋 volcano 🗻 mount_fuji 🏕️ camping ⛱ beach_umbrella 🏜️ desert 🏝️ desert_island 🏞️ national_park ","date":"2021-07-01","objectID":"/blog/emoji/:5:2","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"建筑物 图标 代码 图标 代码 🏟️ stadium 🏛️ classical_building 🏗️ building_construction 🏘 houses 🏚 derelict_house 🏠 house 🏡 house_with_garden 🏢 office 🏣 post_office 🏤 european_post_office 🏥 hospital 🏦 bank 🏨 hotel 🏩 love_hotel 🏪 convenience_store 🏫 school 🏬 department_store 🏭 factory 🏯 japanese_castle 🏰 european_castle 💒 wedding 🗼 tokyo_tower 🗽 statue_of_liberty ","date":"2021-07-01","objectID":"/blog/emoji/:5:3","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"宗教建筑 图标 代码 图标 代码 ⛪ church 🕌 mosque 🕍 synagogue ⛩️ shinto_shrine 🕋 kaaba ","date":"2021-07-01","objectID":"/blog/emoji/:5:4","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"其它地点 图标 代码 图标 代码 ⛲ fountain ⛺ tent 🌁 foggy 🌃 night_with_stars 🏙️ cityscape 🌄 sunrise_over_mountains 🌅 sunrise 🌆 city_sunset 🌇 city_sunrise 🌉 bridge_at_night ♨️ hotsprings 🎠 carousel_horse 🎡 ferris_wheel 🎢 roller_coaster 💈 barber 🎪 circus_tent ","date":"2021-07-01","objectID":"/blog/emoji/:5:5","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"陆路运输 图标 代码 图标 代码 🚂 steam_locomotive 🚃 railway_car 🚄 bullettrain_side 🚅 bullettrain_front 🚆 train2 🚇 metro 🚈 light_rail 🚉 station 🚊 tram 🚝 monorail 🚞 mountain_railway 🚋 train 🚌 bus 🚍 oncoming_bus 🚎 trolleybus 🚐 minibus 🚑 ambulance 🚒 fire_engine 🚓 police_car 🚔 oncoming_police_car 🚕 taxi 🚖 oncoming_taxi 🚗 car red_car 🚘 oncoming_automobile 🚙 blue_car 🚚 truck 🚛 articulated_lorry 🚜 tractor 🏎️ racing_car 🏍 motorcycle 🛵 motor_scooter 🚲 bike 🛴 kick_scooter 🚏 busstop 🛣️ motorway 🛤️ railway_track 🛢️ oil_drum ⛽ fuelpump 🚨 rotating_light 🚥 traffic_light 🚦 vertical_traffic_light 🛑 stop_sign 🚧 construction ","date":"2021-07-01","objectID":"/blog/emoji/:5:6","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"水路运输 图标 代码 图标 代码 ⚓ anchor ⛵ boat sailboat 🛶 canoe 🚤 speedboat 🛳️ passenger_ship ⛴️ ferry 🛥️ motor_boat 🚢 ship ","date":"2021-07-01","objectID":"/blog/emoji/:5:7","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"空中运输 图标 代码 图标 代码 ✈️ airplane 🛩️ small_airplane 🛫 flight_departure 🛬 flight_arrival 💺 seat 🚁 helicopter 🚟 suspension_railway 🚠 mountain_cableway 🚡 aerial_tramway 🛰️ artificial_satellite 🚀 rocket ","date":"2021-07-01","objectID":"/blog/emoji/:5:8","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"旅馆 icon code icon code 🛎️ bellhop_bell ","date":"2021-07-01","objectID":"/blog/emoji/:5:9","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"时间 图标 代码 图标 代码 ⌛ hourglass ⏳ hourglass_flowing_sand ⌚ watch ⏰ alarm_clock ⏱️ stopwatch ⏲️ timer_clock 🕰️ mantelpiece_clock 🕛 clock12 🕧 clock1230 🕐 clock1 🕜 clock130 🕑 clock2 🕝 clock230 🕒 clock3 🕞 clock330 🕓 clock4 🕟 clock430 🕔 clock5 🕠 clock530 🕕 clock6 🕡 clock630 🕖 clock7 🕢 clock730 🕗 clock8 🕣 clock830 🕘 clock9 🕤 clock930 🕙 clock10 🕥 clock1030 🕚 clock11 🕦 clock1130 ","date":"2021-07-01","objectID":"/blog/emoji/:5:10","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"天空与天气 图标 代码 图标 代码 🌑 new_moon 🌒 waxing_crescent_moon 🌓 first_quarter_moon 🌔 moon waxing_gibbous_moon 🌕 full_moon 🌖 waning_gibbous_moon 🌗 last_quarter_moon 🌘 waning_crescent_moon 🌙 crescent_moon 🌚 new_moon_with_face 🌛 first_quarter_moon_with_face 🌜 last_quarter_moon_with_face 🌡️ thermometer ☀️ sunny 🌝 full_moon_with_face 🌞 sun_with_face ⭐ star 🌟 star2 🌠 stars 🌌 milky_way ☁️ cloud ⛅ partly_sunny ⛈ cloud_with_lightning_and_rain 🌤 sun_behind_small_cloud 🌥 sun_behind_large_cloud 🌦 sun_behind_rain_cloud 🌧 cloud_with_rain 🌨 cloud_with_snow 🌩 cloud_with_lightning 🌪️ tornado 🌫️ fog 🌬 wind_face 🌀 cyclone 🌈 rainbow 🌂 closed_umbrella ☂️ open_umbrella ☂️ umbrella ⛱️ parasol_on_ground ⚡ zap ❄️ snowflake ☃️ snowman_with_snow ☃️ snowman ☄️ comet 🔥 fire 💧 droplet 🌊 ocean ","date":"2021-07-01","objectID":"/blog/emoji/:5:11","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"活动 ","date":"2021-07-01","objectID":"/blog/emoji/:6:0","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"事件 图标 代码 图标 代码 🎃 jack_o_lantern 🎄 christmas_tree 🎆 fireworks 🎇 sparkler ✨ sparkles 🎈 balloon 🎉 tada 🎊 confetti_ball 🎋 tanabata_tree 🎍 bamboo 🎎 dolls 🎏 flags 🎐 wind_chime 🎑 rice_scene 🎀 ribbon 🎁 gift 🎗️ reminder_ribbon 🎟 tickets 🎫 ticket ","date":"2021-07-01","objectID":"/blog/emoji/:6:1","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"奖杯与奖牌 图标 代码 图标 代码 🎖️ medal_military 🏆 trophy 🏅 medal_sports 🥇 1st_place_medal 🥈 2nd_place_medal 🥉 3rd_place_medal ","date":"2021-07-01","objectID":"/blog/emoji/:6:2","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"体育运动 图标 代码 图标 代码 ⚽ soccer ⚾ baseball 🏀 basketball 🏐 volleyball 🏈 football 🏉 rugby_football 🎾 tennis 🎳 bowling 🦗 cricket 🏑 field_hockey 🏒 ice_hockey 🏓 ping_pong 🏸 badminton 🥊 boxing_glove 🥋 martial_arts_uniform 🥅 goal_net ⛳ golf ⛸️ ice_skate 🎣 fishing_pole_and_fish 🎽 running_shirt_with_sash 🎿 ski ","date":"2021-07-01","objectID":"/blog/emoji/:6:3","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"游戏 图标 代码 图标 代码 🎯 dart 🎱 8ball 🔮 crystal_ball 🎮 video_game 🕹️ joystick 🎰 slot_machine 🎲 game_die ♠️ spades ♥️ hearts ♦️ diamonds ♣️ clubs 🃏 black_joker 🀄 mahjong 🎴 flower_playing_cards ","date":"2021-07-01","objectID":"/blog/emoji/:6:4","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"艺术与工艺 图标 代码 图标 代码 🎭 performing_arts 🖼 framed_picture 🎨 art ","date":"2021-07-01","objectID":"/blog/emoji/:6:5","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"物品 ","date":"2021-07-01","objectID":"/blog/emoji/:7:0","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"服装 图标 代码 图标 代码 👓 eyeglasses 🕶️ dark_sunglasses 👔 necktie 👕 shirt tshirt 👖 jeans 👗 dress 👘 kimono 👙 bikini 👚 womans_clothes 👛 purse 👜 handbag 👝 pouch 🛍️ shopping 🎒 school_satchel 👞 mans_shoe shoe 👟 athletic_shoe 👠 high_heel 👡 sandal 👢 boot 👑 crown 👒 womans_hat 🎩 tophat 🎓 mortar_board ⛑️ rescue_worker_helmet 📿 prayer_beads 💄 lipstick 💍 ring 💎 gem ","date":"2021-07-01","objectID":"/blog/emoji/:7:1","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"声音 图标 代码 图标 代码 🔇 mute 🔈 speaker 🔉 sound 🔊 loud_sound 📢 loudspeaker 📣 mega 📯 postal_horn 🔔 bell 🔕 no_bell ","date":"2021-07-01","objectID":"/blog/emoji/:7:2","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"音乐 图标 代码 图标 代码 🎼 musical_score 🎵 musical_note 🎶 notes 🎙️ studio_microphone 🎚️ level_slider 🎛️ control_knobs 🎤 microphone 🎧 headphones 📻 radio ","date":"2021-07-01","objectID":"/blog/emoji/:7:3","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"乐器 图标 代码 图标 代码 🎷 saxophone 🎸 guitar 🎹 musical_keyboard 🎺 trumpet 🎻 violin 🥁 drum ","date":"2021-07-01","objectID":"/blog/emoji/:7:4","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"电话 图标 代码 图标 代码 📱 iphone 📲 calling ☎️ phone telephone 📞 telephone_receiver 📟 pager 📠 fax ","date":"2021-07-01","objectID":"/blog/emoji/:7:5","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"电脑 图标 代码 图标 代码 🔋 battery 🔌 electric_plug 💻 computer 🖥️ desktop_computer 🖨️ printer ⌨️ keyboard 🖱 computer_mouse 🖲️ trackball 💽 minidisc 💾 floppy_disk 💿 cd 📀 dvd ","date":"2021-07-01","objectID":"/blog/emoji/:7:6","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"灯光与影像 图标 代码 图标 代码 🎥 movie_camera 🎞️ film_strip 📽️ film_projector 🎬 clapper 📺 tv 📷 camera 📸 camera_flash 📹 video_camera 📼 vhs 🔍 mag 🔎 mag_right 🕯️ candle 💡 bulb 🔦 flashlight 🏮 izakaya_lantern lantern ","date":"2021-07-01","objectID":"/blog/emoji/:7:7","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"书与纸张 图标 代码 图标 代码 📔 notebook_with_decorative_cover 📕 closed_book 📖 book open_book 📗 green_book 📘 blue_book 📙 orange_book 📚 books 📓 notebook 📒 ledger 📃 page_with_curl 📜 scroll 📄 page_facing_up 📰 newspaper 🗞️ newspaper_roll 📑 bookmark_tabs 🔖 bookmark 🏷️ label ","date":"2021-07-01","objectID":"/blog/emoji/:7:8","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"钱 图标 代码 图标 代码 💰 moneybag 💴 yen 💵 dollar 💶 euro 💷 pound 💸 money_with_wings 💳 credit_card 💹 chart ","date":"2021-07-01","objectID":"/blog/emoji/:7:9","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"邮件 图标 代码 图标 代码 ✉️ email envelope 📧 📧 📨 incoming_envelope 📩 envelope_with_arrow 📤 outbox_tray 📥 inbox_tray 📦 package 📫 mailbox 📪 mailbox_closed 📬 mailbox_with_mail 📭 mailbox_with_no_mail 📮 postbox 🗳 ballot_box ","date":"2021-07-01","objectID":"/blog/emoji/:7:10","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"书写 图标 代码 图标 代码 ✏️ pencil2 ✒️ black_nib 🖋 fountain_pen 🖊 pen 🖌 paintbrush 🖍 crayon 📝 memo pencil ","date":"2021-07-01","objectID":"/blog/emoji/:7:11","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"办公 图标 代码 图标 代码 💼 briefcase 📁 file_folder 📂 open_file_folder 🗂️ card_index_dividers 📅 date 📆 calendar 🗒 spiral_notepad 🗓 spiral_calendar 📇 card_index 📈 chart_with_upwards_trend 📉 chart_with_downwards_trend 📊 bar_chart 📋 clipboard 📌 pushpin 📍 round_pushpin 📎 paperclip 🖇 paperclips 📏 straight_ruler 📐 triangular_ruler ✂️ scissors 🗃️ card_file_box 🗄️ file_cabinet 🗑️ wastebasket ","date":"2021-07-01","objectID":"/blog/emoji/:7:12","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"锁 图标 代码 图标 代码 🔒 lock 🔓 unlock 🔏 lock_with_ink_pen 🔐 closed_lock_with_key 🔑 key 🗝️ old_key ","date":"2021-07-01","objectID":"/blog/emoji/:7:13","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"工具 图标 代码 图标 代码 🔨 hammer ⛏️ pick ⚒️ hammer_and_pick 🛠️ hammer_and_wrench 🗡 dagger ⚔️ crossed_swords 🔫 gun 🏹 bow_and_arrow 🛡️ shield 🔧 wrench 🔩 nut_and_bolt ⚙️ gear 🗜 clamp ⚖ balance_scale 🔗 link ⛓️ chains ","date":"2021-07-01","objectID":"/blog/emoji/:7:14","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"科学 图标 代码 图标 代码 ⚗️ alembic 🔬 microscope 🔭 telescope 🛰️ satellite ","date":"2021-07-01","objectID":"/blog/emoji/:7:15","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"医疗 图标 代码 图标 代码 💉 syringe 💊 pill ","date":"2021-07-01","objectID":"/blog/emoji/:7:16","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"生活用品 图标 代码 图标 代码 🚪 door 🛏️ bed 🛋️ couch_and_lamp 🚽 toilet 🚿 shower 🛁 bathtub 🛒 shopping_cart ","date":"2021-07-01","objectID":"/blog/emoji/:7:17","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"其它物品 图标 代码 图标 代码 🚬 smoking ⚰️ coffin ⚱️ funeral_urn 🗿 moyai ","date":"2021-07-01","objectID":"/blog/emoji/:7:18","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"符号 ","date":"2021-07-01","objectID":"/blog/emoji/:8:0","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"交通标识 图标 代码 图标 代码 🏧 atm 🚮 put_litter_in_its_place 🚰 potable_water ♿ wheelchair 🚹 mens 🚺 womens 🚻 restroom 🚼 baby_symbol 🚾 wc 🛂 passport_control 🛃 customs 🛄 baggage_claim 🛅 left_luggage ","date":"2021-07-01","objectID":"/blog/emoji/:8:1","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"警告 图标 代码 图标 代码 ⚠️ warning 🚸 children_crossing ⛔ no_entry 🚫 no_entry_sign 🚳 no_bicycles 🚭 no_smoking 🚯 do_not_litter 🚱 🚱 🚷 no_pedestrians 📵 no_mobile_phones 🔞 underage ☢ radioactive ☣ biohazard ","date":"2021-07-01","objectID":"/blog/emoji/:8:2","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"箭头 图标 代码 图标 代码 ⬆️ arrow_up ↗️ arrow_upper_right ➡️ arrow_right ↘️ arrow_lower_right ⬇️ arrow_down ↙️ arrow_lower_left ⬅️ arrow_left ↖️ arrow_upper_left ↕️ arrow_up_down ↔️ left_right_arrow ↩️ leftwards_arrow_with_hook ↪️ arrow_right_hook ⤴️ arrow_heading_up ⤵️ arrow_heading_down 🔃 arrows_clockwise 🔄 arrows_counterclockwise 🔙 back 🔚 end 🔛 on 🔜 soon 🔝 top ","date":"2021-07-01","objectID":"/blog/emoji/:8:3","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"宗教 图标 代码 图标 代码 🛐 place_of_worship ⚛️ atom_symbol 🕉 om ✡️ star_of_david ☸️ wheel_of_dharma ☯️ yin_yang ✝️ latin_cross ☦️ orthodox_cross ☪️ star_and_crescent ☮️ peace_symbol 🕎 menorah 🔯 six_pointed_star ","date":"2021-07-01","objectID":"/blog/emoji/:8:4","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"生肖 图标 代码 图标 代码 ♈ aries ♉ taurus ♊ gemini ♋ cancer ♌ leo ♍ virgo ♎ libra ♏ scorpius ♐ sagittarius ♑ capricorn ♒ aquarius ♓ pisces ⛎ ophiuchus ","date":"2021-07-01","objectID":"/blog/emoji/:8:5","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"影像符号 图标 代码 图标 代码 🔀 twisted_rightwards_arrows 🔁 repeat 🔂 repeat_one ▶️ arrow_forward ⏩ fast_forward ⏭ next_track_button ⏯ play_or_pause_button ◀️ arrow_backward ⏪ rewind ⏮️ previous_track_button 🔼 arrow_up_small ⏫ arrow_double_up 🔽 arrow_down_small ⏬ arrow_double_down ⏸ pause_button ⏹ stop_button ⏺ record_button 🎦 cinema 🔅 low_brightness 🔆 high_brightness 📶 signal_strength 📳 vibration_mode 📴 mobile_phone_off ","date":"2021-07-01","objectID":"/blog/emoji/:8:6","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"数学 图标 代码 图标 代码 ✖️ heavy_multiplication_x ➕ heavy_plus_sign ➖ heavy_minus_sign ➗ heavy_division_sign ","date":"2021-07-01","objectID":"/blog/emoji/:8:7","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"标点符号 图标 代码 图标 代码 ‼️ bangbang ⁉️ interrobang ❓ question ❔ grey_question ❕ grey_exclamation ❗ exclamation heavy_exclamation_mark 〰️ wavy_dash ","date":"2021-07-01","objectID":"/blog/emoji/:8:8","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"货币 图标 代码 图标 代码 💱 currency_exchange 💲 heavy_dollar_sign ","date":"2021-07-01","objectID":"/blog/emoji/:8:9","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"按键符号 图标 代码 图标 代码 #️⃣ hash *️⃣ asterisk 0️⃣ zero 1️⃣ one 2️⃣ two 3️⃣ three 4️⃣ four 5️⃣ five 6️⃣ six 7️⃣ seven 8️⃣ eight 9️⃣ nine 🔟 keycap_ten ","date":"2021-07-01","objectID":"/blog/emoji/:8:10","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"字母符号 图标 代码 图标 代码 🔠 capital_abcd 🔡 abcd 🔢 1234 🔣 symbols 🔤 abc 🅰️ a 🆎 ab 🅱️ b 🆑 cl 🆒 cool 🆓 free ℹ️ information_source 🆔 id ⓜ️ m 🆕 new 🆖 ng 🅾️ o2 🆗 ok 🅿️ parking 🆘 sos 🆙 up 🆚 vs 🈁 koko 🈂️ sa 🈷️ u6708 🈶 u6709 🈯 u6307 🉐 ideograph_advantage 🈹 u5272 🈚 u7121 🈲 u7981 🉑 accept 🈸 u7533 🈴 u5408 🈳 u7a7a ㊗️ congratulations ㊙️ secret 🈺 u55b6 🈵 u6e80 ","date":"2021-07-01","objectID":"/blog/emoji/:8:11","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"几何符号 图标 代码 图标 代码 🔴 red_circle 🔵 large_blue_circle ⚫ black_circle ⚪ white_circle ⬛ black_large_square ⬜ white_large_square ◼️ black_medium_square ◻️ white_medium_square ◾ black_medium_small_square ◽ white_medium_small_square ▪️ black_small_square ▫️ white_small_square 🔶 large_orange_diamond 🔷 large_blue_diamond 🔸 small_orange_diamond 🔹 small_blue_diamond 🔺 small_red_triangle 🔻 small_red_triangle_down 💠 diamond_shape_with_a_dot_inside 🔘 radio_button 🔳 white_square_button 🔲 black_square_button ","date":"2021-07-01","objectID":"/blog/emoji/:8:12","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"其它符合 图标 代码 图标 代码 ♻️ recycle ⚜️ fleur_de_lis 🔱 trident 📛 name_badge 🔰 beginner ⭕ o ✅ white_check_mark ☑️ ballot_box_with_check ✔️ heavy_check_mark ❌ x ❎ negative_squared_cross_mark ➰ curly_loop ➿ loop 〽️ part_alternation_mark ✳️ eight_spoked_asterisk ✴️ eight_pointed_black_star ❇️ sparkle ©️ copyright ®️ registered ™️ tm ","date":"2021-07-01","objectID":"/blog/emoji/:8:13","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"旗帜 ","date":"2021-07-01","objectID":"/blog/emoji/:9:0","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"常用旗帜 图标 代码 图标 代码 🏁 checkered_flag 🚩 triangular_flag_on_post 🎌 crossed_flags 🏴 black_flag 🏳 white_flag 🏳️‍🌈 rainbow_flag ","date":"2021-07-01","objectID":"/blog/emoji/:9:1","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"},{"categories":["Markdown"],"content":"国家和地区旗帜 图标 代码 图标 代码 🇦🇩 andorra 🇦🇪 united_arab_emirates 🇦🇫 afghanistan 🇦🇬 antigua_barbuda 🇦🇮 anguilla 🇦🇱 albania 🇦🇲 armenia 🇦🇴 angola 🇦🇶 antarctica 🇦🇷 argentina 🇦🇸 american_samoa 🇦🇹 austria 🇦🇺 australia 🇦🇼 aruba 🇦🇽 aland_islands 🇦🇿 azerbaijan 🇧🇦 bosnia_herzegovina 🇧🇧 barbados 🇧🇩 bangladesh 🇧🇪 belgium 🇧🇫 burkina_faso 🇧🇬 bulgaria 🇧🇭 bahrain 🇧🇮 burundi 🇧🇯 benin 🇧🇱 st_barthelemy 🇧🇲 bermuda 🇧🇳 brunei 🇧🇴 bolivia 🇧🇶 caribbean_netherlands 🇧🇷 brazil 🇧🇸 bahamas 🇧🇹 bhutan 🇧🇼 botswana 🇧🇾 belarus 🇧🇿 belize 🇨🇦 canada 🇨🇨 cocos_islands 🇨🇩 congo_kinshasa 🇨🇫 central_african_republic 🇨🇬 congo_brazzaville 🇨🇭 switzerland 🇨🇮 cote_divoire 🇨🇰 cook_islands 🇨🇱 chile 🇨🇲 cameroon 🇨🇳 cn 🇨🇴 colombia 🇨🇷 costa_rica 🇨🇺 cuba 🇨🇻 cape_verde 🇨🇼 curacao 🇨🇽 christmas_island 🇨🇾 cyprus 🇨🇿 czech_republic 🇩🇪 de 🇩🇯 djibouti 🇩🇰 denmark 🇩🇲 dominica 🇩🇴 dominican_republic 🇩🇿 algeria 🇪🇨 ecuador 🇪🇪 estonia 🇪🇬 egypt 🇪🇭 western_sahara 🇪🇷 eritrea 🇪🇸 es 🇪🇹 ethiopia 🇪🇺 eu european_union 🇫🇮 finland 🇫🇯 fiji 🇫🇰 falkland_islands 🇫🇲 micronesia 🇫🇴 faroe_islands 🇫🇷 fr 🇬🇦 gabon 🇬🇧 gb uk 🇬🇩 grenada 🇬🇪 georgia 🇬🇫 french_guiana 🇬🇬 guernsey 🇬🇭 ghana 🇬🇮 gibraltar 🇬🇱 greenland 🇬🇲 gambia 🇬🇳 guinea 🇬🇵 guadeloupe 🇬🇶 equatorial_guinea 🇬🇷 greece 🇬🇸 south_georgia_south_sandwich_islands 🇬🇹 guatemala 🇬🇺 guam 🇬🇼 guinea_bissau 🇬🇾 guyana 🇭🇰 hong_kong 🇭🇳 honduras 🇭🇷 croatia 🇭🇹 haiti 🇭🇺 hungary 🇮🇨 canary_islands 🇮🇩 indonesia 🇮🇪 ireland 🇮🇱 israel 🇮🇲 isle_of_man 🇮🇳 india 🇮🇴 british_indian_ocean_territory 🇮🇶 iraq 🇮🇷 iran 🇮🇸 iceland 🇮🇹 it 🇯🇪 jersey 🇯🇲 jamaica 🇯🇴 jordan 🇯🇵 jp 🇰🇪 kenya 🇰🇬 kyrgyzstan 🇰🇭 cambodia 🇰🇮 kiribati 🇰🇲 comoros 🇰🇳 st_kitts_nevis 🇰🇵 north_korea 🇰🇷 kr 🇰🇼 kuwait 🇰🇾 cayman_islands 🇰🇿 kazakhstan 🇱🇦 laos 🇱🇧 lebanon 🇱🇨 st_lucia 🇱🇮 liechtenstein 🇱🇰 sri_lanka 🇱🇷 liberia 🇱🇸 lesotho 🇱🇹 lithuania 🇱🇺 luxembourg 🇱🇻 latvia 🇱🇾 libya 🇲🇦 morocco 🇲🇨 monaco 🇲🇩 moldova 🇲🇪 montenegro 🇲🇬 madagascar 🇲🇭 marshall_islands 🇲🇰 macedonia 🇲🇱 mali 🇲🇲 myanmar 🇲🇳 mongolia 🇲🇴 macau 🇲🇵 northern_mariana_islands 🇲🇶 martinique 🇲🇷 mauritania 🇲🇸 montserrat 🇲🇹 malta 🇲🇺 mauritius 🇲🇻 maldives 🇲🇼 malawi 🇲🇽 mexico 🇲🇾 malaysia 🇲🇿 mozambique 🇳🇦 namibia 🇳🇨 new_caledonia 🇳🇪 niger 🇳🇫 norfolk_island 🇳🇬 nigeria 🇳🇮 nicaragua 🇳🇱 netherlands 🇳🇴 norway 🇳🇵 nepal 🇳🇷 nauru 🇳🇺 niue 🇳🇿 new_zealand 🇴🇲 oman 🇵🇦 panama 🇵🇪 peru 🇵🇫 french_polynesia 🇵🇬 papua_new_guinea 🇵🇭 philippines 🇵🇰 pakistan 🇵🇱 poland 🇵🇲 st_pierre_miquelon 🇵🇳 pitcairn_islands 🇵🇷 puerto_rico 🇵🇸 palestinian_territories 🇵🇹 portugal 🇵🇼 palau 🇵🇾 paraguay 🇶🇦 qatar 🇷🇪 reunion 🇷🇴 romania 🇷🇸 serbia 🇷🇺 ru 🇷🇼 rwanda 🇸🇦 saudi_arabia 🇸🇧 solomon_islands 🇸🇨 seychelles 🇸🇩 sudan 🇸🇪 sweden 🇸🇬 singapore 🇸🇭 st_helena 🇸🇮 slovenia 🇸🇰 slovakia 🇸🇱 sierra_leone 🇸🇲 san_marino 🇸🇳 senegal 🇸🇴 somalia 🇸🇷 suriname 🇸🇸 south_sudan 🇸🇹 sao_tome_principe 🇸🇻 el_salvador 🇸🇽 sint_maarten 🇸🇾 syria 🇸🇿 swaziland 🇹🇨 turks_caicos_islands 🇹🇩 chad 🇹🇫 french_southern_territories 🇹🇬 togo 🇹🇭 thailand 🇹🇯 tajikistan 🇹🇰 tokelau 🇹🇱 timor_leste 🇹🇲 turkmenistan 🇹🇳 tunisia 🇹🇴 tonga 🇹🇷 tr 🇹🇹 trinidad_tobago 🇹🇻 tuvalu 🇹🇼 taiwan 🇹🇿 tanzania 🇺🇦 ukraine 🇺🇬 uganda 🇺🇸 us 🇺🇾 uruguay 🇺🇿 uzbekistan 🇻🇦 vatican_city 🇻🇨 st_vincent_grenadines 🇻🇪 venezuela 🇻🇬 british_virgin_islands 🇻🇮 us_virgin_islands 🇻🇳 vietnam 🇻🇺 vanuatu 🇼🇫 wallis_futuna 🇼🇸 samoa 🇽🇰 kosovo 🇾🇪 yemen 🇾🇹 mayotte 🇿🇦 south_africa 🇿🇲 zambia 🇿🇼 zimbabwe ","date":"2021-07-01","objectID":"/blog/emoji/:9:2","tags":["emoji"],"title":"Emoji 支持","uri":"/blog/emoji/"}]